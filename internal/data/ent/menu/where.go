// Code generated by ent, DO NOT EDIT.

package menu

import (
	"base-server/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldID, id))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldCreateTime, v))
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldUpdateTime, v))
}

// Pid applies equality check predicate on the "pid" field. It's identical to PidEQ.
func Pid(v int64) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldPid, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int8) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldType, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldStatus, v))
}

// Path applies equality check predicate on the "path" field. It's identical to PathEQ.
func Path(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldPath, v))
}

// Redirect applies equality check predicate on the "redirect" field. It's identical to RedirectEQ.
func Redirect(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldRedirect, v))
}

// Alias applies equality check predicate on the "alias" field. It's identical to AliasEQ.
func Alias(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAlias, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldName, v))
}

// Component applies equality check predicate on the "component" field. It's identical to ComponentEQ.
func Component(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldComponent, v))
}

// Icon applies equality check predicate on the "icon" field. It's identical to IconEQ.
func Icon(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIcon, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldTitle, v))
}

// Order applies equality check predicate on the "order" field. It's identical to OrderEQ.
func Order(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldOrder, v))
}

// OpenInNewWindow applies equality check predicate on the "openInNewWindow" field. It's identical to OpenInNewWindowEQ.
func OpenInNewWindow(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldOpenInNewWindow, v))
}

// NoBasicLayout applies equality check predicate on the "noBasicLayout" field. It's identical to NoBasicLayoutEQ.
func NoBasicLayout(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldNoBasicLayout, v))
}

// MenuVisibleWithForbidden applies equality check predicate on the "menuVisibleWithForbidden" field. It's identical to MenuVisibleWithForbiddenEQ.
func MenuVisibleWithForbidden(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldMenuVisibleWithForbidden, v))
}

// Link applies equality check predicate on the "link" field. It's identical to LinkEQ.
func Link(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldLink, v))
}

// IframeSrc applies equality check predicate on the "iframeSrc" field. It's identical to IframeSrcEQ.
func IframeSrc(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIframeSrc, v))
}

// ActiveIcon applies equality check predicate on the "activeIcon" field. It's identical to ActiveIconEQ.
func ActiveIcon(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldActiveIcon, v))
}

// ActivePath applies equality check predicate on the "activePath" field. It's identical to ActivePathEQ.
func ActivePath(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldActivePath, v))
}

// MaxNumOfOpenTab applies equality check predicate on the "maxNumOfOpenTab" field. It's identical to MaxNumOfOpenTabEQ.
func MaxNumOfOpenTab(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldMaxNumOfOpenTab, v))
}

// Keepalive applies equality check predicate on the "keepalive" field. It's identical to KeepaliveEQ.
func Keepalive(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldKeepalive, v))
}

// IgnoreAccess applies equality check predicate on the "ignoreAccess" field. It's identical to IgnoreAccessEQ.
func IgnoreAccess(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIgnoreAccess, v))
}

// Authority applies equality check predicate on the "authority" field. It's identical to AuthorityEQ.
func Authority(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAuthority, v))
}

// AffixTab applies equality check predicate on the "affixTab" field. It's identical to AffixTabEQ.
func AffixTab(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAffixTab, v))
}

// AffixTabOrder applies equality check predicate on the "affixTabOrder" field. It's identical to AffixTabOrderEQ.
func AffixTabOrder(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAffixTabOrder, v))
}

// HideInMenu applies equality check predicate on the "hideInMenu" field. It's identical to HideInMenuEQ.
func HideInMenu(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInMenu, v))
}

// HideInTab applies equality check predicate on the "hideInTab" field. It's identical to HideInTabEQ.
func HideInTab(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInTab, v))
}

// HideInBreadcrumb applies equality check predicate on the "hideInBreadcrumb" field. It's identical to HideInBreadcrumbEQ.
func HideInBreadcrumb(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInBreadcrumb, v))
}

// HideChildrenInMenu applies equality check predicate on the "hideChildrenInMenu" field. It's identical to HideChildrenInMenuEQ.
func HideChildrenInMenu(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideChildrenInMenu, v))
}

// FullPathKey applies equality check predicate on the "fullPathKey" field. It's identical to FullPathKeyEQ.
func FullPathKey(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldFullPathKey, v))
}

// Badge applies equality check predicate on the "badge" field. It's identical to BadgeEQ.
func Badge(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadge, v))
}

// BadgeType applies equality check predicate on the "badgeType" field. It's identical to BadgeTypeEQ.
func BadgeType(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadgeType, v))
}

// BadgeVariants applies equality check predicate on the "badgeVariants" field. It's identical to BadgeVariantsEQ.
func BadgeVariants(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadgeVariants, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldCreateTime, v))
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldUpdateTime, v))
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldUpdateTime, v))
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldUpdateTime, vs...))
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldUpdateTime, vs...))
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldUpdateTime, v))
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldUpdateTime, v))
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldUpdateTime, v))
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldUpdateTime, v))
}

// PidEQ applies the EQ predicate on the "pid" field.
func PidEQ(v int64) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldPid, v))
}

// PidNEQ applies the NEQ predicate on the "pid" field.
func PidNEQ(v int64) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldPid, v))
}

// PidIn applies the In predicate on the "pid" field.
func PidIn(vs ...int64) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldPid, vs...))
}

// PidNotIn applies the NotIn predicate on the "pid" field.
func PidNotIn(vs ...int64) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldPid, vs...))
}

// PidGT applies the GT predicate on the "pid" field.
func PidGT(v int64) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldPid, v))
}

// PidGTE applies the GTE predicate on the "pid" field.
func PidGTE(v int64) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldPid, v))
}

// PidLT applies the LT predicate on the "pid" field.
func PidLT(v int64) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldPid, v))
}

// PidLTE applies the LTE predicate on the "pid" field.
func PidLTE(v int64) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldPid, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int8) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int8) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int8) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int8) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int8) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int8) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int8) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int8) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldType, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldStatus, v))
}

// PathEQ applies the EQ predicate on the "path" field.
func PathEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldPath, v))
}

// PathNEQ applies the NEQ predicate on the "path" field.
func PathNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldPath, v))
}

// PathIn applies the In predicate on the "path" field.
func PathIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldPath, vs...))
}

// PathNotIn applies the NotIn predicate on the "path" field.
func PathNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldPath, vs...))
}

// PathGT applies the GT predicate on the "path" field.
func PathGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldPath, v))
}

// PathGTE applies the GTE predicate on the "path" field.
func PathGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldPath, v))
}

// PathLT applies the LT predicate on the "path" field.
func PathLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldPath, v))
}

// PathLTE applies the LTE predicate on the "path" field.
func PathLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldPath, v))
}

// PathContains applies the Contains predicate on the "path" field.
func PathContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldPath, v))
}

// PathHasPrefix applies the HasPrefix predicate on the "path" field.
func PathHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldPath, v))
}

// PathHasSuffix applies the HasSuffix predicate on the "path" field.
func PathHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldPath, v))
}

// PathEqualFold applies the EqualFold predicate on the "path" field.
func PathEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldPath, v))
}

// PathContainsFold applies the ContainsFold predicate on the "path" field.
func PathContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldPath, v))
}

// RedirectEQ applies the EQ predicate on the "redirect" field.
func RedirectEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldRedirect, v))
}

// RedirectNEQ applies the NEQ predicate on the "redirect" field.
func RedirectNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldRedirect, v))
}

// RedirectIn applies the In predicate on the "redirect" field.
func RedirectIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldRedirect, vs...))
}

// RedirectNotIn applies the NotIn predicate on the "redirect" field.
func RedirectNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldRedirect, vs...))
}

// RedirectGT applies the GT predicate on the "redirect" field.
func RedirectGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldRedirect, v))
}

// RedirectGTE applies the GTE predicate on the "redirect" field.
func RedirectGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldRedirect, v))
}

// RedirectLT applies the LT predicate on the "redirect" field.
func RedirectLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldRedirect, v))
}

// RedirectLTE applies the LTE predicate on the "redirect" field.
func RedirectLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldRedirect, v))
}

// RedirectContains applies the Contains predicate on the "redirect" field.
func RedirectContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldRedirect, v))
}

// RedirectHasPrefix applies the HasPrefix predicate on the "redirect" field.
func RedirectHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldRedirect, v))
}

// RedirectHasSuffix applies the HasSuffix predicate on the "redirect" field.
func RedirectHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldRedirect, v))
}

// RedirectEqualFold applies the EqualFold predicate on the "redirect" field.
func RedirectEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldRedirect, v))
}

// RedirectContainsFold applies the ContainsFold predicate on the "redirect" field.
func RedirectContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldRedirect, v))
}

// AliasEQ applies the EQ predicate on the "alias" field.
func AliasEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAlias, v))
}

// AliasNEQ applies the NEQ predicate on the "alias" field.
func AliasNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldAlias, v))
}

// AliasIn applies the In predicate on the "alias" field.
func AliasIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldAlias, vs...))
}

// AliasNotIn applies the NotIn predicate on the "alias" field.
func AliasNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldAlias, vs...))
}

// AliasGT applies the GT predicate on the "alias" field.
func AliasGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldAlias, v))
}

// AliasGTE applies the GTE predicate on the "alias" field.
func AliasGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldAlias, v))
}

// AliasLT applies the LT predicate on the "alias" field.
func AliasLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldAlias, v))
}

// AliasLTE applies the LTE predicate on the "alias" field.
func AliasLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldAlias, v))
}

// AliasContains applies the Contains predicate on the "alias" field.
func AliasContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldAlias, v))
}

// AliasHasPrefix applies the HasPrefix predicate on the "alias" field.
func AliasHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldAlias, v))
}

// AliasHasSuffix applies the HasSuffix predicate on the "alias" field.
func AliasHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldAlias, v))
}

// AliasEqualFold applies the EqualFold predicate on the "alias" field.
func AliasEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldAlias, v))
}

// AliasContainsFold applies the ContainsFold predicate on the "alias" field.
func AliasContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldAlias, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldName, v))
}

// ComponentEQ applies the EQ predicate on the "component" field.
func ComponentEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldComponent, v))
}

// ComponentNEQ applies the NEQ predicate on the "component" field.
func ComponentNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldComponent, v))
}

// ComponentIn applies the In predicate on the "component" field.
func ComponentIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldComponent, vs...))
}

// ComponentNotIn applies the NotIn predicate on the "component" field.
func ComponentNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldComponent, vs...))
}

// ComponentGT applies the GT predicate on the "component" field.
func ComponentGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldComponent, v))
}

// ComponentGTE applies the GTE predicate on the "component" field.
func ComponentGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldComponent, v))
}

// ComponentLT applies the LT predicate on the "component" field.
func ComponentLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldComponent, v))
}

// ComponentLTE applies the LTE predicate on the "component" field.
func ComponentLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldComponent, v))
}

// ComponentContains applies the Contains predicate on the "component" field.
func ComponentContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldComponent, v))
}

// ComponentHasPrefix applies the HasPrefix predicate on the "component" field.
func ComponentHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldComponent, v))
}

// ComponentHasSuffix applies the HasSuffix predicate on the "component" field.
func ComponentHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldComponent, v))
}

// ComponentEqualFold applies the EqualFold predicate on the "component" field.
func ComponentEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldComponent, v))
}

// ComponentContainsFold applies the ContainsFold predicate on the "component" field.
func ComponentContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldComponent, v))
}

// IconEQ applies the EQ predicate on the "icon" field.
func IconEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIcon, v))
}

// IconNEQ applies the NEQ predicate on the "icon" field.
func IconNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldIcon, v))
}

// IconIn applies the In predicate on the "icon" field.
func IconIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldIcon, vs...))
}

// IconNotIn applies the NotIn predicate on the "icon" field.
func IconNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldIcon, vs...))
}

// IconGT applies the GT predicate on the "icon" field.
func IconGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldIcon, v))
}

// IconGTE applies the GTE predicate on the "icon" field.
func IconGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldIcon, v))
}

// IconLT applies the LT predicate on the "icon" field.
func IconLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldIcon, v))
}

// IconLTE applies the LTE predicate on the "icon" field.
func IconLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldIcon, v))
}

// IconContains applies the Contains predicate on the "icon" field.
func IconContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldIcon, v))
}

// IconHasPrefix applies the HasPrefix predicate on the "icon" field.
func IconHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldIcon, v))
}

// IconHasSuffix applies the HasSuffix predicate on the "icon" field.
func IconHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldIcon, v))
}

// IconEqualFold applies the EqualFold predicate on the "icon" field.
func IconEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldIcon, v))
}

// IconContainsFold applies the ContainsFold predicate on the "icon" field.
func IconContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldIcon, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldTitle, v))
}

// OrderEQ applies the EQ predicate on the "order" field.
func OrderEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldOrder, v))
}

// OrderNEQ applies the NEQ predicate on the "order" field.
func OrderNEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldOrder, v))
}

// OrderIn applies the In predicate on the "order" field.
func OrderIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldOrder, vs...))
}

// OrderNotIn applies the NotIn predicate on the "order" field.
func OrderNotIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldOrder, vs...))
}

// OrderGT applies the GT predicate on the "order" field.
func OrderGT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldOrder, v))
}

// OrderGTE applies the GTE predicate on the "order" field.
func OrderGTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldOrder, v))
}

// OrderLT applies the LT predicate on the "order" field.
func OrderLT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldOrder, v))
}

// OrderLTE applies the LTE predicate on the "order" field.
func OrderLTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldOrder, v))
}

// OpenInNewWindowEQ applies the EQ predicate on the "openInNewWindow" field.
func OpenInNewWindowEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldOpenInNewWindow, v))
}

// OpenInNewWindowNEQ applies the NEQ predicate on the "openInNewWindow" field.
func OpenInNewWindowNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldOpenInNewWindow, v))
}

// NoBasicLayoutEQ applies the EQ predicate on the "noBasicLayout" field.
func NoBasicLayoutEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldNoBasicLayout, v))
}

// NoBasicLayoutNEQ applies the NEQ predicate on the "noBasicLayout" field.
func NoBasicLayoutNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldNoBasicLayout, v))
}

// MenuVisibleWithForbiddenEQ applies the EQ predicate on the "menuVisibleWithForbidden" field.
func MenuVisibleWithForbiddenEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldMenuVisibleWithForbidden, v))
}

// MenuVisibleWithForbiddenNEQ applies the NEQ predicate on the "menuVisibleWithForbidden" field.
func MenuVisibleWithForbiddenNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldMenuVisibleWithForbidden, v))
}

// LinkEQ applies the EQ predicate on the "link" field.
func LinkEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldLink, v))
}

// LinkNEQ applies the NEQ predicate on the "link" field.
func LinkNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldLink, v))
}

// LinkIn applies the In predicate on the "link" field.
func LinkIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldLink, vs...))
}

// LinkNotIn applies the NotIn predicate on the "link" field.
func LinkNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldLink, vs...))
}

// LinkGT applies the GT predicate on the "link" field.
func LinkGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldLink, v))
}

// LinkGTE applies the GTE predicate on the "link" field.
func LinkGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldLink, v))
}

// LinkLT applies the LT predicate on the "link" field.
func LinkLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldLink, v))
}

// LinkLTE applies the LTE predicate on the "link" field.
func LinkLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldLink, v))
}

// LinkContains applies the Contains predicate on the "link" field.
func LinkContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldLink, v))
}

// LinkHasPrefix applies the HasPrefix predicate on the "link" field.
func LinkHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldLink, v))
}

// LinkHasSuffix applies the HasSuffix predicate on the "link" field.
func LinkHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldLink, v))
}

// LinkEqualFold applies the EqualFold predicate on the "link" field.
func LinkEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldLink, v))
}

// LinkContainsFold applies the ContainsFold predicate on the "link" field.
func LinkContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldLink, v))
}

// IframeSrcEQ applies the EQ predicate on the "iframeSrc" field.
func IframeSrcEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIframeSrc, v))
}

// IframeSrcNEQ applies the NEQ predicate on the "iframeSrc" field.
func IframeSrcNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldIframeSrc, v))
}

// IframeSrcIn applies the In predicate on the "iframeSrc" field.
func IframeSrcIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldIframeSrc, vs...))
}

// IframeSrcNotIn applies the NotIn predicate on the "iframeSrc" field.
func IframeSrcNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldIframeSrc, vs...))
}

// IframeSrcGT applies the GT predicate on the "iframeSrc" field.
func IframeSrcGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldIframeSrc, v))
}

// IframeSrcGTE applies the GTE predicate on the "iframeSrc" field.
func IframeSrcGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldIframeSrc, v))
}

// IframeSrcLT applies the LT predicate on the "iframeSrc" field.
func IframeSrcLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldIframeSrc, v))
}

// IframeSrcLTE applies the LTE predicate on the "iframeSrc" field.
func IframeSrcLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldIframeSrc, v))
}

// IframeSrcContains applies the Contains predicate on the "iframeSrc" field.
func IframeSrcContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldIframeSrc, v))
}

// IframeSrcHasPrefix applies the HasPrefix predicate on the "iframeSrc" field.
func IframeSrcHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldIframeSrc, v))
}

// IframeSrcHasSuffix applies the HasSuffix predicate on the "iframeSrc" field.
func IframeSrcHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldIframeSrc, v))
}

// IframeSrcEqualFold applies the EqualFold predicate on the "iframeSrc" field.
func IframeSrcEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldIframeSrc, v))
}

// IframeSrcContainsFold applies the ContainsFold predicate on the "iframeSrc" field.
func IframeSrcContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldIframeSrc, v))
}

// ActiveIconEQ applies the EQ predicate on the "activeIcon" field.
func ActiveIconEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldActiveIcon, v))
}

// ActiveIconNEQ applies the NEQ predicate on the "activeIcon" field.
func ActiveIconNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldActiveIcon, v))
}

// ActiveIconIn applies the In predicate on the "activeIcon" field.
func ActiveIconIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldActiveIcon, vs...))
}

// ActiveIconNotIn applies the NotIn predicate on the "activeIcon" field.
func ActiveIconNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldActiveIcon, vs...))
}

// ActiveIconGT applies the GT predicate on the "activeIcon" field.
func ActiveIconGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldActiveIcon, v))
}

// ActiveIconGTE applies the GTE predicate on the "activeIcon" field.
func ActiveIconGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldActiveIcon, v))
}

// ActiveIconLT applies the LT predicate on the "activeIcon" field.
func ActiveIconLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldActiveIcon, v))
}

// ActiveIconLTE applies the LTE predicate on the "activeIcon" field.
func ActiveIconLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldActiveIcon, v))
}

// ActiveIconContains applies the Contains predicate on the "activeIcon" field.
func ActiveIconContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldActiveIcon, v))
}

// ActiveIconHasPrefix applies the HasPrefix predicate on the "activeIcon" field.
func ActiveIconHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldActiveIcon, v))
}

// ActiveIconHasSuffix applies the HasSuffix predicate on the "activeIcon" field.
func ActiveIconHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldActiveIcon, v))
}

// ActiveIconEqualFold applies the EqualFold predicate on the "activeIcon" field.
func ActiveIconEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldActiveIcon, v))
}

// ActiveIconContainsFold applies the ContainsFold predicate on the "activeIcon" field.
func ActiveIconContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldActiveIcon, v))
}

// ActivePathEQ applies the EQ predicate on the "activePath" field.
func ActivePathEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldActivePath, v))
}

// ActivePathNEQ applies the NEQ predicate on the "activePath" field.
func ActivePathNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldActivePath, v))
}

// ActivePathIn applies the In predicate on the "activePath" field.
func ActivePathIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldActivePath, vs...))
}

// ActivePathNotIn applies the NotIn predicate on the "activePath" field.
func ActivePathNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldActivePath, vs...))
}

// ActivePathGT applies the GT predicate on the "activePath" field.
func ActivePathGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldActivePath, v))
}

// ActivePathGTE applies the GTE predicate on the "activePath" field.
func ActivePathGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldActivePath, v))
}

// ActivePathLT applies the LT predicate on the "activePath" field.
func ActivePathLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldActivePath, v))
}

// ActivePathLTE applies the LTE predicate on the "activePath" field.
func ActivePathLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldActivePath, v))
}

// ActivePathContains applies the Contains predicate on the "activePath" field.
func ActivePathContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldActivePath, v))
}

// ActivePathHasPrefix applies the HasPrefix predicate on the "activePath" field.
func ActivePathHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldActivePath, v))
}

// ActivePathHasSuffix applies the HasSuffix predicate on the "activePath" field.
func ActivePathHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldActivePath, v))
}

// ActivePathEqualFold applies the EqualFold predicate on the "activePath" field.
func ActivePathEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldActivePath, v))
}

// ActivePathContainsFold applies the ContainsFold predicate on the "activePath" field.
func ActivePathContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldActivePath, v))
}

// MaxNumOfOpenTabEQ applies the EQ predicate on the "maxNumOfOpenTab" field.
func MaxNumOfOpenTabEQ(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabNEQ applies the NEQ predicate on the "maxNumOfOpenTab" field.
func MaxNumOfOpenTabNEQ(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabIn applies the In predicate on the "maxNumOfOpenTab" field.
func MaxNumOfOpenTabIn(vs ...int16) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldMaxNumOfOpenTab, vs...))
}

// MaxNumOfOpenTabNotIn applies the NotIn predicate on the "maxNumOfOpenTab" field.
func MaxNumOfOpenTabNotIn(vs ...int16) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldMaxNumOfOpenTab, vs...))
}

// MaxNumOfOpenTabGT applies the GT predicate on the "maxNumOfOpenTab" field.
func MaxNumOfOpenTabGT(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabGTE applies the GTE predicate on the "maxNumOfOpenTab" field.
func MaxNumOfOpenTabGTE(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabLT applies the LT predicate on the "maxNumOfOpenTab" field.
func MaxNumOfOpenTabLT(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabLTE applies the LTE predicate on the "maxNumOfOpenTab" field.
func MaxNumOfOpenTabLTE(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldMaxNumOfOpenTab, v))
}

// KeepaliveEQ applies the EQ predicate on the "keepalive" field.
func KeepaliveEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldKeepalive, v))
}

// KeepaliveNEQ applies the NEQ predicate on the "keepalive" field.
func KeepaliveNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldKeepalive, v))
}

// IgnoreAccessEQ applies the EQ predicate on the "ignoreAccess" field.
func IgnoreAccessEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIgnoreAccess, v))
}

// IgnoreAccessNEQ applies the NEQ predicate on the "ignoreAccess" field.
func IgnoreAccessNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldIgnoreAccess, v))
}

// AuthorityEQ applies the EQ predicate on the "authority" field.
func AuthorityEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAuthority, v))
}

// AuthorityNEQ applies the NEQ predicate on the "authority" field.
func AuthorityNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldAuthority, v))
}

// AuthorityIn applies the In predicate on the "authority" field.
func AuthorityIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldAuthority, vs...))
}

// AuthorityNotIn applies the NotIn predicate on the "authority" field.
func AuthorityNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldAuthority, vs...))
}

// AuthorityGT applies the GT predicate on the "authority" field.
func AuthorityGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldAuthority, v))
}

// AuthorityGTE applies the GTE predicate on the "authority" field.
func AuthorityGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldAuthority, v))
}

// AuthorityLT applies the LT predicate on the "authority" field.
func AuthorityLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldAuthority, v))
}

// AuthorityLTE applies the LTE predicate on the "authority" field.
func AuthorityLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldAuthority, v))
}

// AuthorityContains applies the Contains predicate on the "authority" field.
func AuthorityContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldAuthority, v))
}

// AuthorityHasPrefix applies the HasPrefix predicate on the "authority" field.
func AuthorityHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldAuthority, v))
}

// AuthorityHasSuffix applies the HasSuffix predicate on the "authority" field.
func AuthorityHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldAuthority, v))
}

// AuthorityEqualFold applies the EqualFold predicate on the "authority" field.
func AuthorityEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldAuthority, v))
}

// AuthorityContainsFold applies the ContainsFold predicate on the "authority" field.
func AuthorityContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldAuthority, v))
}

// AffixTabEQ applies the EQ predicate on the "affixTab" field.
func AffixTabEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAffixTab, v))
}

// AffixTabNEQ applies the NEQ predicate on the "affixTab" field.
func AffixTabNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldAffixTab, v))
}

// AffixTabOrderEQ applies the EQ predicate on the "affixTabOrder" field.
func AffixTabOrderEQ(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAffixTabOrder, v))
}

// AffixTabOrderNEQ applies the NEQ predicate on the "affixTabOrder" field.
func AffixTabOrderNEQ(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldAffixTabOrder, v))
}

// AffixTabOrderIn applies the In predicate on the "affixTabOrder" field.
func AffixTabOrderIn(vs ...int16) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldAffixTabOrder, vs...))
}

// AffixTabOrderNotIn applies the NotIn predicate on the "affixTabOrder" field.
func AffixTabOrderNotIn(vs ...int16) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldAffixTabOrder, vs...))
}

// AffixTabOrderGT applies the GT predicate on the "affixTabOrder" field.
func AffixTabOrderGT(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldAffixTabOrder, v))
}

// AffixTabOrderGTE applies the GTE predicate on the "affixTabOrder" field.
func AffixTabOrderGTE(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldAffixTabOrder, v))
}

// AffixTabOrderLT applies the LT predicate on the "affixTabOrder" field.
func AffixTabOrderLT(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldAffixTabOrder, v))
}

// AffixTabOrderLTE applies the LTE predicate on the "affixTabOrder" field.
func AffixTabOrderLTE(v int16) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldAffixTabOrder, v))
}

// HideInMenuEQ applies the EQ predicate on the "hideInMenu" field.
func HideInMenuEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInMenu, v))
}

// HideInMenuNEQ applies the NEQ predicate on the "hideInMenu" field.
func HideInMenuNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldHideInMenu, v))
}

// HideInTabEQ applies the EQ predicate on the "hideInTab" field.
func HideInTabEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInTab, v))
}

// HideInTabNEQ applies the NEQ predicate on the "hideInTab" field.
func HideInTabNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldHideInTab, v))
}

// HideInBreadcrumbEQ applies the EQ predicate on the "hideInBreadcrumb" field.
func HideInBreadcrumbEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInBreadcrumb, v))
}

// HideInBreadcrumbNEQ applies the NEQ predicate on the "hideInBreadcrumb" field.
func HideInBreadcrumbNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldHideInBreadcrumb, v))
}

// HideChildrenInMenuEQ applies the EQ predicate on the "hideChildrenInMenu" field.
func HideChildrenInMenuEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideChildrenInMenu, v))
}

// HideChildrenInMenuNEQ applies the NEQ predicate on the "hideChildrenInMenu" field.
func HideChildrenInMenuNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldHideChildrenInMenu, v))
}

// FullPathKeyEQ applies the EQ predicate on the "fullPathKey" field.
func FullPathKeyEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldFullPathKey, v))
}

// FullPathKeyNEQ applies the NEQ predicate on the "fullPathKey" field.
func FullPathKeyNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldFullPathKey, v))
}

// BadgeEQ applies the EQ predicate on the "badge" field.
func BadgeEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadge, v))
}

// BadgeNEQ applies the NEQ predicate on the "badge" field.
func BadgeNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldBadge, v))
}

// BadgeIn applies the In predicate on the "badge" field.
func BadgeIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldBadge, vs...))
}

// BadgeNotIn applies the NotIn predicate on the "badge" field.
func BadgeNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldBadge, vs...))
}

// BadgeGT applies the GT predicate on the "badge" field.
func BadgeGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldBadge, v))
}

// BadgeGTE applies the GTE predicate on the "badge" field.
func BadgeGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldBadge, v))
}

// BadgeLT applies the LT predicate on the "badge" field.
func BadgeLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldBadge, v))
}

// BadgeLTE applies the LTE predicate on the "badge" field.
func BadgeLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldBadge, v))
}

// BadgeContains applies the Contains predicate on the "badge" field.
func BadgeContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldBadge, v))
}

// BadgeHasPrefix applies the HasPrefix predicate on the "badge" field.
func BadgeHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldBadge, v))
}

// BadgeHasSuffix applies the HasSuffix predicate on the "badge" field.
func BadgeHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldBadge, v))
}

// BadgeEqualFold applies the EqualFold predicate on the "badge" field.
func BadgeEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldBadge, v))
}

// BadgeContainsFold applies the ContainsFold predicate on the "badge" field.
func BadgeContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldBadge, v))
}

// BadgeTypeEQ applies the EQ predicate on the "badgeType" field.
func BadgeTypeEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadgeType, v))
}

// BadgeTypeNEQ applies the NEQ predicate on the "badgeType" field.
func BadgeTypeNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldBadgeType, v))
}

// BadgeTypeIn applies the In predicate on the "badgeType" field.
func BadgeTypeIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldBadgeType, vs...))
}

// BadgeTypeNotIn applies the NotIn predicate on the "badgeType" field.
func BadgeTypeNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldBadgeType, vs...))
}

// BadgeTypeGT applies the GT predicate on the "badgeType" field.
func BadgeTypeGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldBadgeType, v))
}

// BadgeTypeGTE applies the GTE predicate on the "badgeType" field.
func BadgeTypeGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldBadgeType, v))
}

// BadgeTypeLT applies the LT predicate on the "badgeType" field.
func BadgeTypeLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldBadgeType, v))
}

// BadgeTypeLTE applies the LTE predicate on the "badgeType" field.
func BadgeTypeLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldBadgeType, v))
}

// BadgeTypeContains applies the Contains predicate on the "badgeType" field.
func BadgeTypeContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldBadgeType, v))
}

// BadgeTypeHasPrefix applies the HasPrefix predicate on the "badgeType" field.
func BadgeTypeHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldBadgeType, v))
}

// BadgeTypeHasSuffix applies the HasSuffix predicate on the "badgeType" field.
func BadgeTypeHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldBadgeType, v))
}

// BadgeTypeEqualFold applies the EqualFold predicate on the "badgeType" field.
func BadgeTypeEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldBadgeType, v))
}

// BadgeTypeContainsFold applies the ContainsFold predicate on the "badgeType" field.
func BadgeTypeContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldBadgeType, v))
}

// BadgeVariantsEQ applies the EQ predicate on the "badgeVariants" field.
func BadgeVariantsEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadgeVariants, v))
}

// BadgeVariantsNEQ applies the NEQ predicate on the "badgeVariants" field.
func BadgeVariantsNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldBadgeVariants, v))
}

// BadgeVariantsIn applies the In predicate on the "badgeVariants" field.
func BadgeVariantsIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldBadgeVariants, vs...))
}

// BadgeVariantsNotIn applies the NotIn predicate on the "badgeVariants" field.
func BadgeVariantsNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldBadgeVariants, vs...))
}

// BadgeVariantsGT applies the GT predicate on the "badgeVariants" field.
func BadgeVariantsGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldBadgeVariants, v))
}

// BadgeVariantsGTE applies the GTE predicate on the "badgeVariants" field.
func BadgeVariantsGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldBadgeVariants, v))
}

// BadgeVariantsLT applies the LT predicate on the "badgeVariants" field.
func BadgeVariantsLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldBadgeVariants, v))
}

// BadgeVariantsLTE applies the LTE predicate on the "badgeVariants" field.
func BadgeVariantsLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldBadgeVariants, v))
}

// BadgeVariantsContains applies the Contains predicate on the "badgeVariants" field.
func BadgeVariantsContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldBadgeVariants, v))
}

// BadgeVariantsHasPrefix applies the HasPrefix predicate on the "badgeVariants" field.
func BadgeVariantsHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldBadgeVariants, v))
}

// BadgeVariantsHasSuffix applies the HasSuffix predicate on the "badgeVariants" field.
func BadgeVariantsHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldBadgeVariants, v))
}

// BadgeVariantsEqualFold applies the EqualFold predicate on the "badgeVariants" field.
func BadgeVariantsEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldBadgeVariants, v))
}

// BadgeVariantsContainsFold applies the ContainsFold predicate on the "badgeVariants" field.
func BadgeVariantsContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldBadgeVariants, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Menu) predicate.Menu {
	return predicate.Menu(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Menu) predicate.Menu {
	return predicate.Menu(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Menu) predicate.Menu {
	return predicate.Menu(sql.NotPredicates(p))
}
