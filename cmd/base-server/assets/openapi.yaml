# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /basic-api/auth/codes:
        get:
            tags:
                - Base
            description: 获取权限code
            operationId: Base_GetAccessCodes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetAccessCodesReply'
    /basic-api/auth/login:
        post:
            tags:
                - Base
            description: 用户登陆
            operationId: Base_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.LoginReply'
    /basic-api/auth/logout:
        post:
            tags:
                - Base
            description: 注销登陆 (仅靠jwt无法实现退出功能)(未实现，主要靠前端删凭证)
            operationId: Base_Logout
            requestBody:
                content:
                    application/json: {}
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/auth/refresh:
        post:
            tags:
                - Base
            description: 使用refreshToken换取accessToken
            operationId: Base_RefreshToken
            requestBody:
                content:
                    application/json: {}
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.LoginReply'
    /basic-api/auth/reloadPolicy:
        post:
            tags:
                - Base
            description: ////////////////////////////////////////////////// (重新加载casbin权限数据)
            operationId: Base_ReLoadPolicy
            requestBody:
                content:
                    application/json: {}
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/menu/all:
        get:
            tags:
                - Base
            description: |-
                获取路由菜单列表
                	rpc GetMenuList (google.protobuf.Empty) returns (GetMenuListReply) {
            operationId: Base_GetMenuList
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetSysMenuListReply'
    /basic-api/system/api:
        post:
            tags:
                - Base
            description: 添加api资源
            operationId: Base_AddApi
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.ApiListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.ApiListItem'
    /basic-api/system/api/list:
        get:
            tags:
                - Base
            description: |-
                //////////////////////////////// api资源管理
                 获取api资源
            operationId: Base_GetApiList
            parameters:
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: path
                  in: query
                  schema:
                    type: string
                - name: description
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetApiListByPageReply'
    /basic-api/system/api/{id}:
        put:
            tags:
                - Base
            description: 修改api资源
            operationId: Base_UpdateApi
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.ApiListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.ApiListItem'
        delete:
            tags:
                - Base
            description: 删除api资源
            operationId: Base_DelApi
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/system/changePassword:
        post:
            tags:
                - Base
            description: 改密码
            operationId: Base_ChangePassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.ChangePasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/system/dept:
        post:
            tags:
                - Base
            description: 新增部门
            operationId: Base_AddDept
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.DeptListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.DeptListItem'
    /basic-api/system/dept/list:
        get:
            tags:
                - Base
            description: 获取部门列表
            operationId: Base_GetDeptList
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetDeptListReply'
    /basic-api/system/dept/{id}:
        put:
            tags:
                - Base
            description: 修改部门
            operationId: Base_UpdateDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.DeptListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.DeptListItem'
        delete:
            tags:
                - Base
            description: 删除部门
            operationId: Base_DelDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/system/getWalkRoute:
        get:
            tags:
                - Base
            description: |-
                /////////////////////////////////////////////////
                 获取系统所有 api
            operationId: Base_GetWalkRoute
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetWalkRouteReply'
    /basic-api/system/menu:
        post:
            tags:
                - Base
            description: 创建菜单
            operationId: Base_CreateMenu
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.SysMenuListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/system/menu/list:
        get:
            tags:
                - Base
            description: |-
                /////////////////////////////////////////////////// 系统菜单管理
                 获取菜单列表
            operationId: Base_GetSysMenuList
            parameters:
                - name: menuName
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetSysMenuListReply'
    /basic-api/system/menu/name-exists:
        get:
            tags:
                - Base
            description: 菜单名称是否存在
            operationId: Base_IsMenuNameExists
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.IsMenuNameExistsReply'
    /basic-api/system/menu/path-exists:
        get:
            tags:
                - Base
            description: 路由地址是否存在
            operationId: Base_IsMenuPathExists
            parameters:
                - name: id
                  in: query
                  schema:
                    type: string
                - name: path
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.IsMenuPathExistsReply'
    /basic-api/system/menu/{id}:
        put:
            tags:
                - Base
            description: 更新菜单
            operationId: Base_UpdateMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.SysMenuListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
        delete:
            tags:
                - Base
            description: 删除菜单
            operationId: Base_DeleteMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/system/resource:
        post:
            tags:
                - Base
            description: 添加resource资源
            operationId: Base_AddResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.ResourceListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.ResourceListItem'
    /basic-api/system/resource/list:
        get:
            tags:
                - Base
            description: |-
                //////////////////////////////// resource 资源管理
                 获取resource资源
            operationId: Base_GetResourceList
            parameters:
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: type
                  in: query
                  schema:
                    type: string
                - name: description
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetResourceListByPageReply'
    /basic-api/system/resource/{id}:
        put:
            tags:
                - Base
            description: 修改resource资源
            operationId: Base_UpdateResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.ResourceListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.ResourceListItem'
        delete:
            tags:
                - Base
            description: 删除resource资源
            operationId: Base_DelResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/system/role:
        post:
            tags:
                - Base
            description: 新增角色
            operationId: Base_AddRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.RoleListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.RoleListItem'
    /basic-api/system/role/list:
        get:
            tags:
                - Base
            description: 获取角色列表
            operationId: Base_GetRoleList
            parameters:
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: string
                - name: deptId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetRoleListByPageReply'
    /basic-api/system/role/{id}:
        put:
            tags:
                - Base
            description: 修改角色
            operationId: Base_UpdateRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.RoleListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.RoleListItem'
        delete:
            tags:
                - Base
            description: 删除角色
            operationId: Base_DelRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/system/setRoleStatus:
        post:
            tags:
                - Base
            description: 设置角色状态 (未使用)
            operationId: Base_SetRoleStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.SetRoleStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/system/user:
        post:
            tags:
                - Base
            description: 新增用户
            operationId: Base_AddUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.UserListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.UserListItem'
    /basic-api/system/user/list:
        get:
            tags:
                - Base
            description: 获取账户列表
            operationId: Base_GetUserList
            parameters:
                - name: page
                  in: query
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  schema:
                    type: string
                - name: username
                  in: query
                  schema:
                    type: string
                - name: nickname
                  in: query
                  schema:
                    type: string
                - name: deptId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetUserListReply'
    /basic-api/system/user/user-exists:
        post:
            tags:
                - Base
            description: 检查用户是否存在
            operationId: Base_IsUserExist
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.IsUserExistsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.IsUserExistsReply'
    /basic-api/system/user/{id}:
        put:
            tags:
                - Base
            description: 更新用户
            operationId: Base_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.UserListItem'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.UserListItem'
        delete:
            tags:
                - Base
            description: 删除用户
            operationId: Base_DelUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content: {}
    /basic-api/user/info:
        get:
            tags:
                - Base
            description: 获取用户信息
            operationId: Base_GetUserInfo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.GetUserInfoReply'
    /basic-api/v1/server/file/upload:
        post:
            tags:
                - UploadService
            description: 上传文件
            operationId: UploadService_UploadFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.base_api.v1.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.base_api.v1.UploadResponse'
components:
    schemas:
        api.base_api.v1.ApiListItem:
            type: object
            properties:
                id:
                    type: string
                path:
                    type: string
                method:
                    type: string
                description:
                    type: string
                module:
                    type: string
                moduleDescription:
                    type: string
                resourcesGroup:
                    type: string
        api.base_api.v1.ChangePasswordRequest:
            type: object
            properties:
                passwordOld:
                    type: string
                passwordNew:
                    type: string
        api.base_api.v1.DeptListItem:
            type: object
            properties:
                id:
                    type: string
                pid:
                    type: string
                name:
                    type: string
                orderNo:
                    type: integer
                    format: int32
                remark:
                    type: string
                status:
                    type: integer
                    format: int32
                createTime:
                    type: string
                dom:
                    type: string
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.DeptListItem'
        api.base_api.v1.File:
            type: object
            properties:
                file:
                    type: string
                    format: bytes
                fileName:
                    type: string
                fileSize:
                    type: string
        api.base_api.v1.GetAccessCodesReply:
            type: object
            properties:
                accessCodeList:
                    type: array
                    items:
                        type: string
        api.base_api.v1.GetApiListByPageReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.ApiListItem'
                total:
                    type: string
        api.base_api.v1.GetDeptListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.DeptListItem'
                total:
                    type: string
        api.base_api.v1.GetResourceListByPageReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.ResourceListItem'
                total:
                    type: string
        api.base_api.v1.GetRoleListByPageReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.RoleListItem'
                total:
                    type: string
        api.base_api.v1.GetSysMenuListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.SysMenuListItem'
                total:
                    type: string
        api.base_api.v1.GetUserInfoReply:
            type: object
            properties:
                userId:
                    type: string
                username:
                    type: string
                realName:
                    type: string
                avatar:
                    type: string
                desc:
                    type: string
                homePath:
                    type: string
                token:
                    type: string
                roles:
                    $ref: '#/components/schemas/api.base_api.v1.RoleInfo'
        api.base_api.v1.GetUserListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.UserListItem'
                total:
                    type: string
        api.base_api.v1.GetWalkRouteReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.WalkRouteItem'
        api.base_api.v1.IsMenuNameExistsReply:
            type: object
            properties:
                data:
                    type: boolean
        api.base_api.v1.IsMenuPathExistsReply:
            type: object
            properties:
                data:
                    type: boolean
        api.base_api.v1.IsUserExistsReply:
            type: object
            properties:
                data:
                    type: boolean
        api.base_api.v1.IsUserExistsRequest:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
        api.base_api.v1.LoginReply:
            type: object
            properties:
                userId:
                    type: string
                accessToken:
                    type: string
                refreshToken:
                    type: string
        api.base_api.v1.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        api.base_api.v1.Meta:
            type: object
            properties:
                order:
                    type: string
                icon:
                    type: string
                title:
                    type: string
                activeIcon:
                    type: string
                activePath:
                    type: string
                affixTab:
                    type: boolean
                affixTabOrder:
                    type: string
                badge:
                    type: string
                badgeType:
                    type: string
                badgeVariants:
                    type: string
                hideChildrenInMenu:
                    type: boolean
                hideInBreadcrumb:
                    type: boolean
                hideInMenu:
                    type: boolean
                hideInTab:
                    type: boolean
                iframeSrc:
                    type: string
                link:
                    type: string
                keepAlive:
                    type: boolean
                maxNumOfOpenTab:
                    type: string
                noBasicLayout:
                    type: boolean
                openInNewWindow:
                    type: boolean
                ignoreAccess:
                    type: boolean
                authority:
                    type: array
                    items:
                        type: string
        api.base_api.v1.ResourceListItem:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                type:
                    type: string
                value:
                    type: string
                method:
                    type: string
                description:
                    type: string
        api.base_api.v1.RoleInfo:
            type: object
            properties:
                roleName:
                    type: string
                value:
                    type: string
        api.base_api.v1.RoleListItem:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                value:
                    type: string
                status:
                    type: integer
                    format: int32
                orderNo:
                    type: string
                createTime:
                    type: string
                remark:
                    type: string
                permissions:
                    type: array
                    items:
                        type: integer
                        format: int32
                dept:
                    type: string
                apiPermissions:
                    type: array
                    items:
                        type: string
        api.base_api.v1.SetRoleStatusRequest:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: string
        api.base_api.v1.SysMenuListItem:
            type: object
            properties:
                id:
                    type: string
                component:
                    type: string
                status:
                    type: integer
                    format: int32
                authCode:
                    type: string
                name:
                    type: string
                path:
                    type: string
                pid:
                    type: string
                redirect:
                    type: string
                type:
                    type: string
                meta:
                    $ref: '#/components/schemas/api.base_api.v1.Meta'
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.base_api.v1.SysMenuListItem'
                createTime:
                    type: string
        api.base_api.v1.UploadResponse:
            type: object
            properties:
                fileInfoId:
                    type: string
                fullUrl:
                    type: string
                url:
                    type: string
        api.base_api.v1.UserListItem:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                password:
                    type: string
                email:
                    type: string
                nickname:
                    type: string
                role:
                    type: string
                createTime:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: int32
                dept:
                    type: string
                avatar:
                    type: string
        api.base_api.v1.WalkRouteItem:
            type: object
            properties:
                url:
                    type: string
                method:
                    type: string
tags:
    - name: Base
    - name: UploadService
