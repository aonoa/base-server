// Code generated by entgo-template. DO NOT EDIT.

package ent

// CreateAll creates a new ApiResources entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *ApiResourcesCreate) CreateAll(ApiResources *ApiResources) *ApiResourcesCreate {
	builder := c
	builder = builder.SetDescription(ApiResources.Description)
	builder = builder.SetPath(ApiResources.Path)
	builder = builder.SetMethod(ApiResources.Method)
	builder = builder.SetModule(ApiResources.Module)
	builder = builder.SetModuleDescription(ApiResources.ModuleDescription)
	builder = builder.SetResourcesGroup(ApiResources.ResourcesGroup)
	return builder
}

// CreateAll creates a new Dept entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *DeptCreate) CreateAll(Dept *Dept) *DeptCreate {
	builder := c
	builder = builder.SetName(Dept.Name)
	builder = builder.SetSort(Dept.Sort)
	builder = builder.SetStatus(Dept.Status)
	builder = builder.SetDesc(Dept.Desc)
	builder = builder.SetExtension(Dept.Extension)
	builder = builder.SetDom(Dept.Dom)
	builder = builder.SetPid(Dept.Pid)
	return builder
}

// CreateAll creates a new Menu entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *MenuCreate) CreateAll(Menu *Menu) *MenuCreate {
	builder := c
	builder = builder.SetPid(Menu.Pid)
	builder = builder.SetType(Menu.Type)
	builder = builder.SetStatus(Menu.Status)
	builder = builder.SetPath(Menu.Path)
	builder = builder.SetRedirect(Menu.Redirect)
	builder = builder.SetAlias(Menu.Alias)
	builder = builder.SetName(Menu.Name)
	builder = builder.SetComponent(Menu.Component)
	builder = builder.SetIcon(Menu.Icon)
	builder = builder.SetTitle(Menu.Title)
	builder = builder.SetOrder(Menu.Order)
	builder = builder.SetOpenInNewWindow(Menu.OpenInNewWindow)
	builder = builder.SetNoBasicLayout(Menu.NoBasicLayout)
	builder = builder.SetMenuVisibleWithForbidden(Menu.MenuVisibleWithForbidden)
	builder = builder.SetLink(Menu.Link)
	builder = builder.SetIframeSrc(Menu.IframeSrc)
	builder = builder.SetActiveIcon(Menu.ActiveIcon)
	builder = builder.SetActivePath(Menu.ActivePath)
	builder = builder.SetMaxNumOfOpenTab(Menu.MaxNumOfOpenTab)
	builder = builder.SetKeepalive(Menu.Keepalive)
	builder = builder.SetIgnoreAccess(Menu.IgnoreAccess)
	builder = builder.SetAuthority(Menu.Authority)
	builder = builder.SetAffixTab(Menu.AffixTab)
	builder = builder.SetAffixTabOrder(Menu.AffixTabOrder)
	builder = builder.SetHideInMenu(Menu.HideInMenu)
	builder = builder.SetHideInTab(Menu.HideInTab)
	builder = builder.SetHideInBreadcrumb(Menu.HideInBreadcrumb)
	builder = builder.SetHideChildrenInMenu(Menu.HideChildrenInMenu)
	builder = builder.SetFullPathKey(Menu.FullPathKey)
	builder = builder.SetBadge(Menu.Badge)
	builder = builder.SetBadgeType(Menu.BadgeType)
	builder = builder.SetBadgeVariants(Menu.BadgeVariants)
	return builder
}

// CreateAll creates a new Resource entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *ResourceCreate) CreateAll(Resource *Resource) *ResourceCreate {
	builder := c
	builder = builder.SetName(Resource.Name)
	builder = builder.SetType(Resource.Type)
	builder = builder.SetValue(Resource.Value)
	builder = builder.SetMethod(Resource.Method)
	builder = builder.SetDescription(Resource.Description)
	return builder
}

// CreateAll creates a new Role entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *RoleCreate) CreateAll(Role *Role) *RoleCreate {
	builder := c
	builder = builder.SetName(Role.Name)
	builder = builder.SetValue(Role.Value)
	builder = builder.SetStatus(Role.Status)
	builder = builder.SetDesc(Role.Desc)
	builder = builder.SetMenus(Role.Menus)
	return builder
}

// CreateAll creates a new SysLogRecord entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *SysLogRecordCreate) CreateAll(SysLogRecord *SysLogRecord) *SysLogRecordCreate {
	builder := c
	builder = builder.SetUserID(SysLogRecord.UserID)
	builder = builder.SetUserName(SysLogRecord.UserName)
	builder = builder.SetIsLogin(SysLogRecord.IsLogin)
	builder = builder.SetSessionID(SysLogRecord.SessionID)
	builder = builder.SetMethod(SysLogRecord.Method)
	builder = builder.SetPath(SysLogRecord.Path)
	builder = builder.SetRequestTime(SysLogRecord.RequestTime)
	builder = builder.SetIPAddress(SysLogRecord.IPAddress)
	builder = builder.SetIPLocation(SysLogRecord.IPLocation)
	builder = builder.SetLatency(SysLogRecord.Latency)
	builder = builder.SetOs(SysLogRecord.Os)
	builder = builder.SetBrowser(SysLogRecord.Browser)
	builder = builder.SetUserAgent(SysLogRecord.UserAgent)
	builder = builder.SetHeader(SysLogRecord.Header)
	builder = builder.SetGetParams(SysLogRecord.GetParams)
	builder = builder.SetPostData(SysLogRecord.PostData)
	builder = builder.SetResCode(SysLogRecord.ResCode)
	builder = builder.SetReason(SysLogRecord.Reason)
	builder = builder.SetResStatus(SysLogRecord.ResStatus)
	builder = builder.SetStack(SysLogRecord.Stack)
	return builder
}

// CreateAll creates a new User entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *UserCreate) CreateAll(User *User) *UserCreate {
	builder := c
	builder = builder.SetUsername(User.Username)
	builder = builder.SetPassword(User.Password)
	builder = builder.SetNickname(User.Nickname)
	builder = builder.SetEmail(User.Email)
	builder = builder.SetStatus(User.Status)
	builder = builder.SetAvatar(User.Avatar)
	builder = builder.SetDesc(User.Desc)
	builder = builder.SetExtension(User.Extension)
	return builder
}
