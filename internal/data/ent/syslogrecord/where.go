// Code generated by ent, DO NOT EDIT.

package syslogrecord

import (
	"base-server/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldID, id))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldUserID, v))
}

// UserName applies equality check predicate on the "user_name" field. It's identical to UserNameEQ.
func UserName(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldUserName, v))
}

// IsLogin applies equality check predicate on the "is_login" field. It's identical to IsLoginEQ.
func IsLogin(v bool) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldIsLogin, v))
}

// SessionID applies equality check predicate on the "session_id" field. It's identical to SessionIDEQ.
func SessionID(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldSessionID, v))
}

// Method applies equality check predicate on the "method" field. It's identical to MethodEQ.
func Method(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldMethod, v))
}

// Path applies equality check predicate on the "path" field. It's identical to PathEQ.
func Path(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldPath, v))
}

// RequestTime applies equality check predicate on the "request_time" field. It's identical to RequestTimeEQ.
func RequestTime(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldRequestTime, v))
}

// IPAddress applies equality check predicate on the "ip_address" field. It's identical to IPAddressEQ.
func IPAddress(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldIPAddress, v))
}

// IPLocation applies equality check predicate on the "ip_location" field. It's identical to IPLocationEQ.
func IPLocation(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldIPLocation, v))
}

// Latency applies equality check predicate on the "latency" field. It's identical to LatencyEQ.
func Latency(v int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldLatency, v))
}

// Os applies equality check predicate on the "os" field. It's identical to OsEQ.
func Os(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldOs, v))
}

// Browser applies equality check predicate on the "browser" field. It's identical to BrowserEQ.
func Browser(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldBrowser, v))
}

// UserAgent applies equality check predicate on the "user_agent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldUserAgent, v))
}

// Header applies equality check predicate on the "header" field. It's identical to HeaderEQ.
func Header(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldHeader, v))
}

// GetParams applies equality check predicate on the "get_params" field. It's identical to GetParamsEQ.
func GetParams(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldGetParams, v))
}

// PostData applies equality check predicate on the "post_data" field. It's identical to PostDataEQ.
func PostData(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldPostData, v))
}

// ResCode applies equality check predicate on the "res_code" field. It's identical to ResCodeEQ.
func ResCode(v int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldResCode, v))
}

// Reason applies equality check predicate on the "reason" field. It's identical to ReasonEQ.
func Reason(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldReason, v))
}

// ResStatus applies equality check predicate on the "res_status" field. It's identical to ResStatusEQ.
func ResStatus(v bool) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldResStatus, v))
}

// Stack applies equality check predicate on the "stack" field. It's identical to StackEQ.
func Stack(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldStack, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldCreateTime, v))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldUserID, v))
}

// UserNameEQ applies the EQ predicate on the "user_name" field.
func UserNameEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldUserName, v))
}

// UserNameNEQ applies the NEQ predicate on the "user_name" field.
func UserNameNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldUserName, v))
}

// UserNameIn applies the In predicate on the "user_name" field.
func UserNameIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldUserName, vs...))
}

// UserNameNotIn applies the NotIn predicate on the "user_name" field.
func UserNameNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldUserName, vs...))
}

// UserNameGT applies the GT predicate on the "user_name" field.
func UserNameGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldUserName, v))
}

// UserNameGTE applies the GTE predicate on the "user_name" field.
func UserNameGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldUserName, v))
}

// UserNameLT applies the LT predicate on the "user_name" field.
func UserNameLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldUserName, v))
}

// UserNameLTE applies the LTE predicate on the "user_name" field.
func UserNameLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldUserName, v))
}

// UserNameContains applies the Contains predicate on the "user_name" field.
func UserNameContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldUserName, v))
}

// UserNameHasPrefix applies the HasPrefix predicate on the "user_name" field.
func UserNameHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldUserName, v))
}

// UserNameHasSuffix applies the HasSuffix predicate on the "user_name" field.
func UserNameHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldUserName, v))
}

// UserNameEqualFold applies the EqualFold predicate on the "user_name" field.
func UserNameEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldUserName, v))
}

// UserNameContainsFold applies the ContainsFold predicate on the "user_name" field.
func UserNameContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldUserName, v))
}

// IsLoginEQ applies the EQ predicate on the "is_login" field.
func IsLoginEQ(v bool) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldIsLogin, v))
}

// IsLoginNEQ applies the NEQ predicate on the "is_login" field.
func IsLoginNEQ(v bool) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldIsLogin, v))
}

// SessionIDEQ applies the EQ predicate on the "session_id" field.
func SessionIDEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldSessionID, v))
}

// SessionIDNEQ applies the NEQ predicate on the "session_id" field.
func SessionIDNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldSessionID, v))
}

// SessionIDIn applies the In predicate on the "session_id" field.
func SessionIDIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldSessionID, vs...))
}

// SessionIDNotIn applies the NotIn predicate on the "session_id" field.
func SessionIDNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldSessionID, vs...))
}

// SessionIDGT applies the GT predicate on the "session_id" field.
func SessionIDGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldSessionID, v))
}

// SessionIDGTE applies the GTE predicate on the "session_id" field.
func SessionIDGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldSessionID, v))
}

// SessionIDLT applies the LT predicate on the "session_id" field.
func SessionIDLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldSessionID, v))
}

// SessionIDLTE applies the LTE predicate on the "session_id" field.
func SessionIDLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldSessionID, v))
}

// SessionIDContains applies the Contains predicate on the "session_id" field.
func SessionIDContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldSessionID, v))
}

// SessionIDHasPrefix applies the HasPrefix predicate on the "session_id" field.
func SessionIDHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldSessionID, v))
}

// SessionIDHasSuffix applies the HasSuffix predicate on the "session_id" field.
func SessionIDHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldSessionID, v))
}

// SessionIDEqualFold applies the EqualFold predicate on the "session_id" field.
func SessionIDEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldSessionID, v))
}

// SessionIDContainsFold applies the ContainsFold predicate on the "session_id" field.
func SessionIDContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldSessionID, v))
}

// MethodEQ applies the EQ predicate on the "method" field.
func MethodEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldMethod, v))
}

// MethodNEQ applies the NEQ predicate on the "method" field.
func MethodNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldMethod, v))
}

// MethodIn applies the In predicate on the "method" field.
func MethodIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldMethod, vs...))
}

// MethodNotIn applies the NotIn predicate on the "method" field.
func MethodNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldMethod, vs...))
}

// MethodGT applies the GT predicate on the "method" field.
func MethodGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldMethod, v))
}

// MethodGTE applies the GTE predicate on the "method" field.
func MethodGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldMethod, v))
}

// MethodLT applies the LT predicate on the "method" field.
func MethodLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldMethod, v))
}

// MethodLTE applies the LTE predicate on the "method" field.
func MethodLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldMethod, v))
}

// MethodContains applies the Contains predicate on the "method" field.
func MethodContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldMethod, v))
}

// MethodHasPrefix applies the HasPrefix predicate on the "method" field.
func MethodHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldMethod, v))
}

// MethodHasSuffix applies the HasSuffix predicate on the "method" field.
func MethodHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldMethod, v))
}

// MethodEqualFold applies the EqualFold predicate on the "method" field.
func MethodEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldMethod, v))
}

// MethodContainsFold applies the ContainsFold predicate on the "method" field.
func MethodContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldMethod, v))
}

// PathEQ applies the EQ predicate on the "path" field.
func PathEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldPath, v))
}

// PathNEQ applies the NEQ predicate on the "path" field.
func PathNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldPath, v))
}

// PathIn applies the In predicate on the "path" field.
func PathIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldPath, vs...))
}

// PathNotIn applies the NotIn predicate on the "path" field.
func PathNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldPath, vs...))
}

// PathGT applies the GT predicate on the "path" field.
func PathGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldPath, v))
}

// PathGTE applies the GTE predicate on the "path" field.
func PathGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldPath, v))
}

// PathLT applies the LT predicate on the "path" field.
func PathLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldPath, v))
}

// PathLTE applies the LTE predicate on the "path" field.
func PathLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldPath, v))
}

// PathContains applies the Contains predicate on the "path" field.
func PathContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldPath, v))
}

// PathHasPrefix applies the HasPrefix predicate on the "path" field.
func PathHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldPath, v))
}

// PathHasSuffix applies the HasSuffix predicate on the "path" field.
func PathHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldPath, v))
}

// PathEqualFold applies the EqualFold predicate on the "path" field.
func PathEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldPath, v))
}

// PathContainsFold applies the ContainsFold predicate on the "path" field.
func PathContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldPath, v))
}

// RequestTimeEQ applies the EQ predicate on the "request_time" field.
func RequestTimeEQ(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldRequestTime, v))
}

// RequestTimeNEQ applies the NEQ predicate on the "request_time" field.
func RequestTimeNEQ(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldRequestTime, v))
}

// RequestTimeIn applies the In predicate on the "request_time" field.
func RequestTimeIn(vs ...time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldRequestTime, vs...))
}

// RequestTimeNotIn applies the NotIn predicate on the "request_time" field.
func RequestTimeNotIn(vs ...time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldRequestTime, vs...))
}

// RequestTimeGT applies the GT predicate on the "request_time" field.
func RequestTimeGT(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldRequestTime, v))
}

// RequestTimeGTE applies the GTE predicate on the "request_time" field.
func RequestTimeGTE(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldRequestTime, v))
}

// RequestTimeLT applies the LT predicate on the "request_time" field.
func RequestTimeLT(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldRequestTime, v))
}

// RequestTimeLTE applies the LTE predicate on the "request_time" field.
func RequestTimeLTE(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldRequestTime, v))
}

// IPAddressEQ applies the EQ predicate on the "ip_address" field.
func IPAddressEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldIPAddress, v))
}

// IPAddressNEQ applies the NEQ predicate on the "ip_address" field.
func IPAddressNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldIPAddress, v))
}

// IPAddressIn applies the In predicate on the "ip_address" field.
func IPAddressIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldIPAddress, vs...))
}

// IPAddressNotIn applies the NotIn predicate on the "ip_address" field.
func IPAddressNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldIPAddress, vs...))
}

// IPAddressGT applies the GT predicate on the "ip_address" field.
func IPAddressGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldIPAddress, v))
}

// IPAddressGTE applies the GTE predicate on the "ip_address" field.
func IPAddressGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldIPAddress, v))
}

// IPAddressLT applies the LT predicate on the "ip_address" field.
func IPAddressLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldIPAddress, v))
}

// IPAddressLTE applies the LTE predicate on the "ip_address" field.
func IPAddressLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldIPAddress, v))
}

// IPAddressContains applies the Contains predicate on the "ip_address" field.
func IPAddressContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldIPAddress, v))
}

// IPAddressHasPrefix applies the HasPrefix predicate on the "ip_address" field.
func IPAddressHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldIPAddress, v))
}

// IPAddressHasSuffix applies the HasSuffix predicate on the "ip_address" field.
func IPAddressHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldIPAddress, v))
}

// IPAddressEqualFold applies the EqualFold predicate on the "ip_address" field.
func IPAddressEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldIPAddress, v))
}

// IPAddressContainsFold applies the ContainsFold predicate on the "ip_address" field.
func IPAddressContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldIPAddress, v))
}

// IPLocationEQ applies the EQ predicate on the "ip_location" field.
func IPLocationEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldIPLocation, v))
}

// IPLocationNEQ applies the NEQ predicate on the "ip_location" field.
func IPLocationNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldIPLocation, v))
}

// IPLocationIn applies the In predicate on the "ip_location" field.
func IPLocationIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldIPLocation, vs...))
}

// IPLocationNotIn applies the NotIn predicate on the "ip_location" field.
func IPLocationNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldIPLocation, vs...))
}

// IPLocationGT applies the GT predicate on the "ip_location" field.
func IPLocationGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldIPLocation, v))
}

// IPLocationGTE applies the GTE predicate on the "ip_location" field.
func IPLocationGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldIPLocation, v))
}

// IPLocationLT applies the LT predicate on the "ip_location" field.
func IPLocationLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldIPLocation, v))
}

// IPLocationLTE applies the LTE predicate on the "ip_location" field.
func IPLocationLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldIPLocation, v))
}

// IPLocationContains applies the Contains predicate on the "ip_location" field.
func IPLocationContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldIPLocation, v))
}

// IPLocationHasPrefix applies the HasPrefix predicate on the "ip_location" field.
func IPLocationHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldIPLocation, v))
}

// IPLocationHasSuffix applies the HasSuffix predicate on the "ip_location" field.
func IPLocationHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldIPLocation, v))
}

// IPLocationEqualFold applies the EqualFold predicate on the "ip_location" field.
func IPLocationEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldIPLocation, v))
}

// IPLocationContainsFold applies the ContainsFold predicate on the "ip_location" field.
func IPLocationContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldIPLocation, v))
}

// LatencyEQ applies the EQ predicate on the "latency" field.
func LatencyEQ(v int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldLatency, v))
}

// LatencyNEQ applies the NEQ predicate on the "latency" field.
func LatencyNEQ(v int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldLatency, v))
}

// LatencyIn applies the In predicate on the "latency" field.
func LatencyIn(vs ...int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldLatency, vs...))
}

// LatencyNotIn applies the NotIn predicate on the "latency" field.
func LatencyNotIn(vs ...int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldLatency, vs...))
}

// LatencyGT applies the GT predicate on the "latency" field.
func LatencyGT(v int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldLatency, v))
}

// LatencyGTE applies the GTE predicate on the "latency" field.
func LatencyGTE(v int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldLatency, v))
}

// LatencyLT applies the LT predicate on the "latency" field.
func LatencyLT(v int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldLatency, v))
}

// LatencyLTE applies the LTE predicate on the "latency" field.
func LatencyLTE(v int64) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldLatency, v))
}

// OsEQ applies the EQ predicate on the "os" field.
func OsEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldOs, v))
}

// OsNEQ applies the NEQ predicate on the "os" field.
func OsNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldOs, v))
}

// OsIn applies the In predicate on the "os" field.
func OsIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldOs, vs...))
}

// OsNotIn applies the NotIn predicate on the "os" field.
func OsNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldOs, vs...))
}

// OsGT applies the GT predicate on the "os" field.
func OsGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldOs, v))
}

// OsGTE applies the GTE predicate on the "os" field.
func OsGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldOs, v))
}

// OsLT applies the LT predicate on the "os" field.
func OsLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldOs, v))
}

// OsLTE applies the LTE predicate on the "os" field.
func OsLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldOs, v))
}

// OsContains applies the Contains predicate on the "os" field.
func OsContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldOs, v))
}

// OsHasPrefix applies the HasPrefix predicate on the "os" field.
func OsHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldOs, v))
}

// OsHasSuffix applies the HasSuffix predicate on the "os" field.
func OsHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldOs, v))
}

// OsEqualFold applies the EqualFold predicate on the "os" field.
func OsEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldOs, v))
}

// OsContainsFold applies the ContainsFold predicate on the "os" field.
func OsContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldOs, v))
}

// BrowserEQ applies the EQ predicate on the "browser" field.
func BrowserEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldBrowser, v))
}

// BrowserNEQ applies the NEQ predicate on the "browser" field.
func BrowserNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldBrowser, v))
}

// BrowserIn applies the In predicate on the "browser" field.
func BrowserIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldBrowser, vs...))
}

// BrowserNotIn applies the NotIn predicate on the "browser" field.
func BrowserNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldBrowser, vs...))
}

// BrowserGT applies the GT predicate on the "browser" field.
func BrowserGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldBrowser, v))
}

// BrowserGTE applies the GTE predicate on the "browser" field.
func BrowserGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldBrowser, v))
}

// BrowserLT applies the LT predicate on the "browser" field.
func BrowserLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldBrowser, v))
}

// BrowserLTE applies the LTE predicate on the "browser" field.
func BrowserLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldBrowser, v))
}

// BrowserContains applies the Contains predicate on the "browser" field.
func BrowserContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldBrowser, v))
}

// BrowserHasPrefix applies the HasPrefix predicate on the "browser" field.
func BrowserHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldBrowser, v))
}

// BrowserHasSuffix applies the HasSuffix predicate on the "browser" field.
func BrowserHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldBrowser, v))
}

// BrowserEqualFold applies the EqualFold predicate on the "browser" field.
func BrowserEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldBrowser, v))
}

// BrowserContainsFold applies the ContainsFold predicate on the "browser" field.
func BrowserContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldBrowser, v))
}

// UserAgentEQ applies the EQ predicate on the "user_agent" field.
func UserAgentEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "user_agent" field.
func UserAgentNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "user_agent" field.
func UserAgentIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "user_agent" field.
func UserAgentNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "user_agent" field.
func UserAgentGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "user_agent" field.
func UserAgentGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "user_agent" field.
func UserAgentLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "user_agent" field.
func UserAgentLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "user_agent" field.
func UserAgentContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "user_agent" field.
func UserAgentHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "user_agent" field.
func UserAgentHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentEqualFold applies the EqualFold predicate on the "user_agent" field.
func UserAgentEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "user_agent" field.
func UserAgentContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldUserAgent, v))
}

// HeaderEQ applies the EQ predicate on the "header" field.
func HeaderEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldHeader, v))
}

// HeaderNEQ applies the NEQ predicate on the "header" field.
func HeaderNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldHeader, v))
}

// HeaderIn applies the In predicate on the "header" field.
func HeaderIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldHeader, vs...))
}

// HeaderNotIn applies the NotIn predicate on the "header" field.
func HeaderNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldHeader, vs...))
}

// HeaderGT applies the GT predicate on the "header" field.
func HeaderGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldHeader, v))
}

// HeaderGTE applies the GTE predicate on the "header" field.
func HeaderGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldHeader, v))
}

// HeaderLT applies the LT predicate on the "header" field.
func HeaderLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldHeader, v))
}

// HeaderLTE applies the LTE predicate on the "header" field.
func HeaderLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldHeader, v))
}

// HeaderContains applies the Contains predicate on the "header" field.
func HeaderContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldHeader, v))
}

// HeaderHasPrefix applies the HasPrefix predicate on the "header" field.
func HeaderHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldHeader, v))
}

// HeaderHasSuffix applies the HasSuffix predicate on the "header" field.
func HeaderHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldHeader, v))
}

// HeaderEqualFold applies the EqualFold predicate on the "header" field.
func HeaderEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldHeader, v))
}

// HeaderContainsFold applies the ContainsFold predicate on the "header" field.
func HeaderContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldHeader, v))
}

// GetParamsEQ applies the EQ predicate on the "get_params" field.
func GetParamsEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldGetParams, v))
}

// GetParamsNEQ applies the NEQ predicate on the "get_params" field.
func GetParamsNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldGetParams, v))
}

// GetParamsIn applies the In predicate on the "get_params" field.
func GetParamsIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldGetParams, vs...))
}

// GetParamsNotIn applies the NotIn predicate on the "get_params" field.
func GetParamsNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldGetParams, vs...))
}

// GetParamsGT applies the GT predicate on the "get_params" field.
func GetParamsGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldGetParams, v))
}

// GetParamsGTE applies the GTE predicate on the "get_params" field.
func GetParamsGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldGetParams, v))
}

// GetParamsLT applies the LT predicate on the "get_params" field.
func GetParamsLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldGetParams, v))
}

// GetParamsLTE applies the LTE predicate on the "get_params" field.
func GetParamsLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldGetParams, v))
}

// GetParamsContains applies the Contains predicate on the "get_params" field.
func GetParamsContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldGetParams, v))
}

// GetParamsHasPrefix applies the HasPrefix predicate on the "get_params" field.
func GetParamsHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldGetParams, v))
}

// GetParamsHasSuffix applies the HasSuffix predicate on the "get_params" field.
func GetParamsHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldGetParams, v))
}

// GetParamsEqualFold applies the EqualFold predicate on the "get_params" field.
func GetParamsEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldGetParams, v))
}

// GetParamsContainsFold applies the ContainsFold predicate on the "get_params" field.
func GetParamsContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldGetParams, v))
}

// PostDataEQ applies the EQ predicate on the "post_data" field.
func PostDataEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldPostData, v))
}

// PostDataNEQ applies the NEQ predicate on the "post_data" field.
func PostDataNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldPostData, v))
}

// PostDataIn applies the In predicate on the "post_data" field.
func PostDataIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldPostData, vs...))
}

// PostDataNotIn applies the NotIn predicate on the "post_data" field.
func PostDataNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldPostData, vs...))
}

// PostDataGT applies the GT predicate on the "post_data" field.
func PostDataGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldPostData, v))
}

// PostDataGTE applies the GTE predicate on the "post_data" field.
func PostDataGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldPostData, v))
}

// PostDataLT applies the LT predicate on the "post_data" field.
func PostDataLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldPostData, v))
}

// PostDataLTE applies the LTE predicate on the "post_data" field.
func PostDataLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldPostData, v))
}

// PostDataContains applies the Contains predicate on the "post_data" field.
func PostDataContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldPostData, v))
}

// PostDataHasPrefix applies the HasPrefix predicate on the "post_data" field.
func PostDataHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldPostData, v))
}

// PostDataHasSuffix applies the HasSuffix predicate on the "post_data" field.
func PostDataHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldPostData, v))
}

// PostDataEqualFold applies the EqualFold predicate on the "post_data" field.
func PostDataEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldPostData, v))
}

// PostDataContainsFold applies the ContainsFold predicate on the "post_data" field.
func PostDataContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldPostData, v))
}

// ResCodeEQ applies the EQ predicate on the "res_code" field.
func ResCodeEQ(v int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldResCode, v))
}

// ResCodeNEQ applies the NEQ predicate on the "res_code" field.
func ResCodeNEQ(v int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldResCode, v))
}

// ResCodeIn applies the In predicate on the "res_code" field.
func ResCodeIn(vs ...int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldResCode, vs...))
}

// ResCodeNotIn applies the NotIn predicate on the "res_code" field.
func ResCodeNotIn(vs ...int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldResCode, vs...))
}

// ResCodeGT applies the GT predicate on the "res_code" field.
func ResCodeGT(v int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldResCode, v))
}

// ResCodeGTE applies the GTE predicate on the "res_code" field.
func ResCodeGTE(v int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldResCode, v))
}

// ResCodeLT applies the LT predicate on the "res_code" field.
func ResCodeLT(v int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldResCode, v))
}

// ResCodeLTE applies the LTE predicate on the "res_code" field.
func ResCodeLTE(v int32) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldResCode, v))
}

// ReasonEQ applies the EQ predicate on the "reason" field.
func ReasonEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldReason, v))
}

// ReasonNEQ applies the NEQ predicate on the "reason" field.
func ReasonNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldReason, v))
}

// ReasonIn applies the In predicate on the "reason" field.
func ReasonIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldReason, vs...))
}

// ReasonNotIn applies the NotIn predicate on the "reason" field.
func ReasonNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldReason, vs...))
}

// ReasonGT applies the GT predicate on the "reason" field.
func ReasonGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldReason, v))
}

// ReasonGTE applies the GTE predicate on the "reason" field.
func ReasonGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldReason, v))
}

// ReasonLT applies the LT predicate on the "reason" field.
func ReasonLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldReason, v))
}

// ReasonLTE applies the LTE predicate on the "reason" field.
func ReasonLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldReason, v))
}

// ReasonContains applies the Contains predicate on the "reason" field.
func ReasonContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldReason, v))
}

// ReasonHasPrefix applies the HasPrefix predicate on the "reason" field.
func ReasonHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldReason, v))
}

// ReasonHasSuffix applies the HasSuffix predicate on the "reason" field.
func ReasonHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldReason, v))
}

// ReasonEqualFold applies the EqualFold predicate on the "reason" field.
func ReasonEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldReason, v))
}

// ReasonContainsFold applies the ContainsFold predicate on the "reason" field.
func ReasonContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldReason, v))
}

// ResStatusEQ applies the EQ predicate on the "res_status" field.
func ResStatusEQ(v bool) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldResStatus, v))
}

// ResStatusNEQ applies the NEQ predicate on the "res_status" field.
func ResStatusNEQ(v bool) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldResStatus, v))
}

// StackEQ applies the EQ predicate on the "stack" field.
func StackEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldStack, v))
}

// StackNEQ applies the NEQ predicate on the "stack" field.
func StackNEQ(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldStack, v))
}

// StackIn applies the In predicate on the "stack" field.
func StackIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldStack, vs...))
}

// StackNotIn applies the NotIn predicate on the "stack" field.
func StackNotIn(vs ...string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldStack, vs...))
}

// StackGT applies the GT predicate on the "stack" field.
func StackGT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldStack, v))
}

// StackGTE applies the GTE predicate on the "stack" field.
func StackGTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldStack, v))
}

// StackLT applies the LT predicate on the "stack" field.
func StackLT(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldStack, v))
}

// StackLTE applies the LTE predicate on the "stack" field.
func StackLTE(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldStack, v))
}

// StackContains applies the Contains predicate on the "stack" field.
func StackContains(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContains(FieldStack, v))
}

// StackHasPrefix applies the HasPrefix predicate on the "stack" field.
func StackHasPrefix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasPrefix(FieldStack, v))
}

// StackHasSuffix applies the HasSuffix predicate on the "stack" field.
func StackHasSuffix(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldHasSuffix(FieldStack, v))
}

// StackEqualFold applies the EqualFold predicate on the "stack" field.
func StackEqualFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEqualFold(FieldStack, v))
}

// StackContainsFold applies the ContainsFold predicate on the "stack" field.
func StackContainsFold(v string) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldContainsFold(FieldStack, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.FieldLTE(FieldCreateTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SysLogRecord) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SysLogRecord) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SysLogRecord) predicate.SysLogRecord {
	return predicate.SysLogRecord(sql.NotPredicates(p))
}
