// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.1
// source: base_api/v1/base.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_base_api_v1_base_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	AccessToken  string `protobuf:"bytes,2,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	RefreshToken string `protobuf:"bytes,3,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	mi := &file_base_api_v1_base_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{1}
}

func (x *LoginReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LoginReply) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginReply) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type GetUserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string    `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Username string    `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	RealName string    `protobuf:"bytes,3,opt,name=realName,proto3" json:"realName,omitempty"`
	Avatar   string    `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Desc     string    `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	HomePath string    `protobuf:"bytes,6,opt,name=homePath,proto3" json:"homePath,omitempty"`
	Token    string    `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	Roles    *RoleInfo `protobuf:"bytes,8,opt,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetUserInfoReply) Reset() {
	*x = GetUserInfoReply{}
	mi := &file_base_api_v1_base_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReply) ProtoMessage() {}

func (x *GetUserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReply.ProtoReflect.Descriptor instead.
func (*GetUserInfoReply) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserInfoReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserInfoReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserInfoReply) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *GetUserInfoReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *GetUserInfoReply) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetUserInfoReply) GetHomePath() string {
	if x != nil {
		return x.HomePath
	}
	return ""
}

func (x *GetUserInfoReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetUserInfoReply) GetRoles() *RoleInfo {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dom  string `protobuf:"bytes,1,opt,name=dom,proto3" json:"dom,omitempty"`
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Menu string `protobuf:"bytes,3,opt,name=menu,proto3" json:"menu,omitempty"`
}

func (x *UserRole) Reset() {
	*x = UserRole{}
	mi := &file_base_api_v1_base_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRole) ProtoMessage() {}

func (x *UserRole) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRole.ProtoReflect.Descriptor instead.
func (*UserRole) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{3}
}

func (x *UserRole) GetDom() string {
	if x != nil {
		return x.Dom
	}
	return ""
}

func (x *UserRole) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *UserRole) GetMenu() string {
	if x != nil {
		return x.Menu
	}
	return ""
}

type UserExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRole []*UserRole `protobuf:"bytes,1,rep,name=userRole,proto3" json:"userRole,omitempty"`
}

func (x *UserExtension) Reset() {
	*x = UserExtension{}
	mi := &file_base_api_v1_base_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserExtension) ProtoMessage() {}

func (x *UserExtension) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserExtension.ProtoReflect.Descriptor instead.
func (*UserExtension) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{4}
}

func (x *UserExtension) GetUserRole() []*UserRole {
	if x != nil {
		return x.UserRole
	}
	return nil
}

type GetAccessCodesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessCodeList []string `protobuf:"bytes,1,rep,name=accessCodeList,proto3" json:"accessCodeList,omitempty"`
}

func (x *GetAccessCodesReply) Reset() {
	*x = GetAccessCodesReply{}
	mi := &file_base_api_v1_base_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccessCodesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessCodesReply) ProtoMessage() {}

func (x *GetAccessCodesReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessCodesReply.ProtoReflect.Descriptor instead.
func (*GetAccessCodesReply) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccessCodesReply) GetAccessCodeList() []string {
	if x != nil {
		return x.AccessCodeList
	}
	return nil
}

type GetMenuListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuList []*RouteItem `protobuf:"bytes,1,rep,name=menuList,proto3" json:"menuList,omitempty"`
}

func (x *GetMenuListReply) Reset() {
	*x = GetMenuListReply{}
	mi := &file_base_api_v1_base_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMenuListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuListReply) ProtoMessage() {}

func (x *GetMenuListReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuListReply.ProtoReflect.Descriptor instead.
func (*GetMenuListReply) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{6}
}

func (x *GetMenuListReply) GetMenuList() []*RouteItem {
	if x != nil {
		return x.MenuList
	}
	return nil
}

type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=roleName,proto3" json:"roleName,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	mi := &file_base_api_v1_base_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{7}
}

func (x *RoleInfo) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RouteItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`           // 路径的名称，必须是唯一的
	Path      string       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`           // 路径
	Component string       `protobuf:"bytes,4,opt,name=component,proto3" json:"component,omitempty"` // 组件路径
	Meta      *RouteMeta   `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`           // 附加到记录的任意数据
	Alias     []string     `protobuf:"bytes,6,rep,name=alias,proto3" json:"alias,omitempty"`         // 路径的别名
	Redirect  string       `protobuf:"bytes,7,opt,name=redirect,proto3" json:"redirect,omitempty"`   // 如果路由直接匹配，则重定向到何处。重定向发生在任何导航保护之前，并触发具有新目标位置的新导航。
	Children  []*RouteItem `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`   // 嵌套路由的数组
}

func (x *RouteItem) Reset() {
	*x = RouteItem{}
	mi := &file_base_api_v1_base_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteItem) ProtoMessage() {}

func (x *RouteItem) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteItem.ProtoReflect.Descriptor instead.
func (*RouteItem) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{8}
}

func (x *RouteItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RouteItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RouteItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RouteItem) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *RouteItem) GetMeta() *RouteMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RouteItem) GetAlias() []string {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *RouteItem) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *RouteItem) GetChildren() []*RouteItem {
	if x != nil {
		return x.Children
	}
	return nil
}

type RouteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title              string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                             // 标题
	Icon               string   `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`                               // 图标名
	Order              int64    `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`                            // 排序号
	Link               string   `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`                               // 外链-跳转路径
	IframeSrc          string   `protobuf:"bytes,5,opt,name=iframeSrc,proto3" json:"iframeSrc,omitempty"`                     // iframe 地址
	IgnoreAccess       bool     `protobuf:"varint,6,opt,name=ignoreAccess,proto3" json:"ignoreAccess,omitempty"`              // 是否忽略权限
	KeepAlive          bool     `protobuf:"varint,7,opt,name=keepAlive,proto3" json:"keepAlive,omitempty"`                    // 是否缓存
	Badge              string   `protobuf:"bytes,8,opt,name=badge,proto3" json:"badge,omitempty"`                             // 徽标
	BadgeType          string   `protobuf:"bytes,9,opt,name=badgeType,proto3" json:"badgeType,omitempty"`                     // 徽标类型	'dot' | 'normal'
	BadgeVariants      string   `protobuf:"bytes,10,opt,name=badgeVariants,proto3" json:"badgeVariants,omitempty"`            // 徽标颜色	'default' | 'destructive' | 'primary' | 'success' | 'warning' | string
	ActivePath         string   `protobuf:"bytes,11,opt,name=activePath,proto3" json:"activePath,omitempty"`                  // 当前激活的菜单
	MaxNumOfOpenTab    int64    `protobuf:"varint,12,opt,name=maxNumOfOpenTab,proto3" json:"maxNumOfOpenTab,omitempty"`       // 标签页最大打开数量
	HideChildrenInMenu bool     `protobuf:"varint,13,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"` // 隐藏子项路径
	HideInBreadcrumb   bool     `protobuf:"varint,14,opt,name=hideInBreadcrumb,proto3" json:"hideInBreadcrumb,omitempty"`     // 当前路由在面包屑中不展现
	HideInMenu         bool     `protobuf:"varint,15,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                 // 当前路由在菜单中不展现
	HideInTab          bool     `protobuf:"varint,16,opt,name=hideInTab,proto3" json:"hideInTab,omitempty"`                   // 从不显示在选项卡中
	Authority          []string `protobuf:"bytes,17,rep,name=authority,proto3" json:"authority,omitempty"`                    // 需要特定的角色标识才可以访问
}

func (x *RouteMeta) Reset() {
	*x = RouteMeta{}
	mi := &file_base_api_v1_base_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteMeta) ProtoMessage() {}

func (x *RouteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteMeta.ProtoReflect.Descriptor instead.
func (*RouteMeta) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{9}
}

func (x *RouteMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RouteMeta) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *RouteMeta) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *RouteMeta) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *RouteMeta) GetIframeSrc() string {
	if x != nil {
		return x.IframeSrc
	}
	return ""
}

func (x *RouteMeta) GetIgnoreAccess() bool {
	if x != nil {
		return x.IgnoreAccess
	}
	return false
}

func (x *RouteMeta) GetKeepAlive() bool {
	if x != nil {
		return x.KeepAlive
	}
	return false
}

func (x *RouteMeta) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *RouteMeta) GetBadgeType() string {
	if x != nil {
		return x.BadgeType
	}
	return ""
}

func (x *RouteMeta) GetBadgeVariants() string {
	if x != nil {
		return x.BadgeVariants
	}
	return ""
}

func (x *RouteMeta) GetActivePath() string {
	if x != nil {
		return x.ActivePath
	}
	return ""
}

func (x *RouteMeta) GetMaxNumOfOpenTab() int64 {
	if x != nil {
		return x.MaxNumOfOpenTab
	}
	return 0
}

func (x *RouteMeta) GetHideChildrenInMenu() bool {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return false
}

func (x *RouteMeta) GetHideInBreadcrumb() bool {
	if x != nil {
		return x.HideInBreadcrumb
	}
	return false
}

func (x *RouteMeta) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *RouteMeta) GetHideInTab() bool {
	if x != nil {
		return x.HideInTab
	}
	return false
}

func (x *RouteMeta) GetAuthority() []string {
	if x != nil {
		return x.Authority
	}
	return nil
}

type DeptListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                 // id 多层之间用'-'拼接如:0-0
	DeptName   string          `protobuf:"bytes,2,opt,name=deptName,proto3" json:"deptName,omitempty"`     // 部门名称
	OrderNo    int64           `protobuf:"varint,3,opt,name=orderNo,proto3" json:"orderNo,omitempty"`      // 排序
	Remark     string          `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`         // 备注
	Status     string          `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`         // 状态
	CreateTime string          `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"` // 创建时间
	ParentDept string          `protobuf:"bytes,7,opt,name=parentDept,proto3" json:"parentDept,omitempty"` // 父节点id
	Dom        int64           `protobuf:"varint,9,opt,name=dom,proto3" json:"dom,omitempty"`              // 域
	Children   []*DeptListItem `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *DeptListItem) Reset() {
	*x = DeptListItem{}
	mi := &file_base_api_v1_base_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeptListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeptListItem) ProtoMessage() {}

func (x *DeptListItem) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeptListItem.ProtoReflect.Descriptor instead.
func (*DeptListItem) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{10}
}

func (x *DeptListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeptListItem) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *DeptListItem) GetOrderNo() int64 {
	if x != nil {
		return x.OrderNo
	}
	return 0
}

func (x *DeptListItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DeptListItem) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeptListItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DeptListItem) GetParentDept() string {
	if x != nil {
		return x.ParentDept
	}
	return ""
}

func (x *DeptListItem) GetDom() int64 {
	if x != nil {
		return x.Dom
	}
	return 0
}

func (x *DeptListItem) GetChildren() []*DeptListItem {
	if x != nil {
		return x.Children
	}
	return nil
}

type DeleteDept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDept) Reset() {
	*x = DeleteDept{}
	mi := &file_base_api_v1_base_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDept) ProtoMessage() {}

func (x *DeleteDept) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDept.ProtoReflect.Descriptor instead.
func (*DeleteDept) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteDept) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeptListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DeptListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetDeptListReply) Reset() {
	*x = GetDeptListReply{}
	mi := &file_base_api_v1_base_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeptListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeptListReply) ProtoMessage() {}

func (x *GetDeptListReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeptListReply.ProtoReflect.Descriptor instead.
func (*GetDeptListReply) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{12}
}

func (x *GetDeptListReply) GetItems() []*DeptListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetDeptListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RolePageParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	RoleNme  string `protobuf:"bytes,3,opt,name=roleNme,proto3" json:"roleNme,omitempty"`
	Status   int64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	DeptId   string `protobuf:"bytes,5,opt,name=deptId,proto3" json:"deptId,omitempty"`
}

func (x *RolePageParams) Reset() {
	*x = RolePageParams{}
	mi := &file_base_api_v1_base_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RolePageParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePageParams) ProtoMessage() {}

func (x *RolePageParams) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePageParams.ProtoReflect.Descriptor instead.
func (*RolePageParams) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{13}
}

func (x *RolePageParams) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RolePageParams) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RolePageParams) GetRoleNme() string {
	if x != nil {
		return x.RoleNme
	}
	return ""
}

func (x *RolePageParams) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RolePageParams) GetDeptId() string {
	if x != nil {
		return x.DeptId
	}
	return ""
}

type RoleListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                 // id
	RoleName   string   `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`     // 角色名
	RoleValue  string   `protobuf:"bytes,3,opt,name=roleValue,proto3" json:"roleValue,omitempty"`   // 角色值
	Status     int64    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`        // 状态
	OrderNo    string   `protobuf:"bytes,5,opt,name=orderNo,proto3" json:"orderNo,omitempty"`       // 排序
	CreateTime string   `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"` // 创建时间
	Remark     string   `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`         // 备注
	Menu       []string `protobuf:"bytes,8,rep,name=menu,proto3" json:"menu,omitempty"`             // 菜单列表
	Dept       string   `protobuf:"bytes,9,opt,name=dept,proto3" json:"dept,omitempty"`             // 部门
}

func (x *RoleListItem) Reset() {
	*x = RoleListItem{}
	mi := &file_base_api_v1_base_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleListItem) ProtoMessage() {}

func (x *RoleListItem) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleListItem.ProtoReflect.Descriptor instead.
func (*RoleListItem) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{14}
}

func (x *RoleListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoleListItem) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleListItem) GetRoleValue() string {
	if x != nil {
		return x.RoleValue
	}
	return ""
}

func (x *RoleListItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RoleListItem) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *RoleListItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RoleListItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *RoleListItem) GetMenu() []string {
	if x != nil {
		return x.Menu
	}
	return nil
}

func (x *RoleListItem) GetDept() string {
	if x != nil {
		return x.Dept
	}
	return ""
}

type GetRoleListByPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RoleListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total int64           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetRoleListByPageReply) Reset() {
	*x = GetRoleListByPageReply{}
	mi := &file_base_api_v1_base_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoleListByPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleListByPageReply) ProtoMessage() {}

func (x *GetRoleListByPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleListByPageReply.ProtoReflect.Descriptor instead.
func (*GetRoleListByPageReply) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{15}
}

func (x *GetRoleListByPageReply) GetItems() []*RoleListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetRoleListByPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRole) Reset() {
	*x = DeleteRole{}
	mi := &file_base_api_v1_base_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRole) ProtoMessage() {}

func (x *DeleteRole) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRole.ProtoReflect.Descriptor instead.
func (*DeleteRole) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteRole) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MenuParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuName string `protobuf:"bytes,1,opt,name=menuName,proto3" json:"menuName,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MenuParams) Reset() {
	*x = MenuParams{}
	mi := &file_base_api_v1_base_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuParams) ProtoMessage() {}

func (x *MenuParams) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuParams.ProtoReflect.Descriptor instead.
func (*MenuParams) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{17}
}

func (x *MenuParams) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MenuParams) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SysMenuListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                 // id
	OrderNo    string             `protobuf:"bytes,2,opt,name=orderNo,proto3" json:"orderNo,omitempty"`       // 排序
	Icon       string             `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`             // 图标
	MenuName   string             `protobuf:"bytes,4,opt,name=menuName,proto3" json:"menuName,omitempty"`     /// 标题
	Status     int64              `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`        // 状态
	CreateTime string             `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"` // 创建时间
	Component  string             `protobuf:"bytes,7,opt,name=component,proto3" json:"component,omitempty"`   // 组件
	Permission string             `protobuf:"bytes,8,opt,name=permission,proto3" json:"permission,omitempty"` //
	Children   []*SysMenuListItem `protobuf:"bytes,9,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *SysMenuListItem) Reset() {
	*x = SysMenuListItem{}
	mi := &file_base_api_v1_base_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SysMenuListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuListItem) ProtoMessage() {}

func (x *SysMenuListItem) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuListItem.ProtoReflect.Descriptor instead.
func (*SysMenuListItem) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{18}
}

func (x *SysMenuListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SysMenuListItem) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *SysMenuListItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuListItem) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SysMenuListItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysMenuListItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SysMenuListItem) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuListItem) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SysMenuListItem) GetChildren() []*SysMenuListItem {
	if x != nil {
		return x.Children
	}
	return nil
}

type GetSysMenuListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SysMenuListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetSysMenuListReply) Reset() {
	*x = GetSysMenuListReply{}
	mi := &file_base_api_v1_base_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSysMenuListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSysMenuListReply) ProtoMessage() {}

func (x *GetSysMenuListReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSysMenuListReply.ProtoReflect.Descriptor instead.
func (*GetSysMenuListReply) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{19}
}

func (x *GetSysMenuListReply) GetItems() []*SysMenuListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetSysMenuListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AccountParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Account  string `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	DeptId   string `protobuf:"bytes,5,opt,name=deptId,proto3" json:"deptId,omitempty"`
}

func (x *AccountParams) Reset() {
	*x = AccountParams{}
	mi := &file_base_api_v1_base_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountParams) ProtoMessage() {}

func (x *AccountParams) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountParams.ProtoReflect.Descriptor instead.
func (*AccountParams) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{20}
}

func (x *AccountParams) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AccountParams) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AccountParams) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AccountParams) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AccountParams) GetDeptId() string {
	if x != nil {
		return x.DeptId
	}
	return ""
}

type AccountListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Account    string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`       // 账号
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`           // 邮箱
	Nickname   string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`     // 昵称
	Role       int64  `protobuf:"varint,5,opt,name=role,proto3" json:"role,omitempty"`            // 规则
	CreateTime string `protobuf:"bytes,6,opt,name=createTime,proto3" json:"createTime,omitempty"` // 创建时间
	Remark     string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`         // 备注
	Status     int64  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`        // 状态
	Dept       string `protobuf:"bytes,9,opt,name=dept,proto3" json:"dept,omitempty"`             // 部门
}

func (x *AccountListItem) Reset() {
	*x = AccountListItem{}
	mi := &file_base_api_v1_base_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountListItem) ProtoMessage() {}

func (x *AccountListItem) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountListItem.ProtoReflect.Descriptor instead.
func (*AccountListItem) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{21}
}

func (x *AccountListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountListItem) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AccountListItem) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccountListItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AccountListItem) GetRole() int64 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *AccountListItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AccountListItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AccountListItem) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AccountListItem) GetDept() string {
	if x != nil {
		return x.Dept
	}
	return ""
}

type GetAccountListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AccountListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total int64              `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetAccountListReply) Reset() {
	*x = GetAccountListReply{}
	mi := &file_base_api_v1_base_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountListReply) ProtoMessage() {}

func (x *GetAccountListReply) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountListReply.ProtoReflect.Descriptor instead.
func (*GetAccountListReply) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{22}
}

func (x *GetAccountListReply) GetItems() []*AccountListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetAccountListReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DeleteUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteUser) Reset() {
	*x = DeleteUser{}
	mi := &file_base_api_v1_base_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUser) ProtoMessage() {}

func (x *DeleteUser) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUser.ProtoReflect.Descriptor instead.
func (*DeleteUser) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RoleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=roleName,proto3" json:"roleName,omitempty"`
	Status   int64  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoleParams) Reset() {
	*x = RoleParams{}
	mi := &file_base_api_v1_base_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleParams) ProtoMessage() {}

func (x *RoleParams) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleParams.ProtoReflect.Descriptor instead.
func (*RoleParams) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{24}
}

func (x *RoleParams) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleParams) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type SetRoleStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SetRoleStatusRequest) Reset() {
	*x = SetRoleStatusRequest{}
	mi := &file_base_api_v1_base_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRoleStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoleStatusRequest) ProtoMessage() {}

func (x *SetRoleStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoleStatusRequest.ProtoReflect.Descriptor instead.
func (*SetRoleStatusRequest) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{25}
}

func (x *SetRoleStatusRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetRoleStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type IsAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *IsAccountRequest) Reset() {
	*x = IsAccountRequest{}
	mi := &file_base_api_v1_base_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAccountRequest) ProtoMessage() {}

func (x *IsAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAccountRequest.ProtoReflect.Descriptor instead.
func (*IsAccountRequest) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{26}
}

func (x *IsAccountRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type ChangePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PasswordOld string `protobuf:"bytes,1,opt,name=passwordOld,proto3" json:"passwordOld,omitempty"`
	PasswordNew string `protobuf:"bytes,2,opt,name=passwordNew,proto3" json:"passwordNew,omitempty"`
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	mi := &file_base_api_v1_base_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_base_api_v1_base_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_base_api_v1_base_proto_rawDescGZIP(), []int{27}
}

func (x *ChangePasswordRequest) GetPasswordOld() string {
	if x != nil {
		return x.PasswordOld
	}
	return ""
}

func (x *ChangePasswordRequest) GetPasswordNew() string {
	if x != nil {
		return x.PasswordNew
	}
	return ""
}

var File_base_api_v1_base_proto protoreflect.FileDescriptor

var file_base_api_v1_base_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x6a, 0x0a, 0x0a,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xf1, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65,
	0x6e, 0x75, 0x22, 0x46, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x3d, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a,
	0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0x9b, 0x04, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x72,
	0x63, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69,
	0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x41, 0x6c,
	0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a,
	0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66,
	0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x62, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x64, 0x65, 0x49,
	0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72,
	0x75, 0x6d, 0x62, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e,
	0x75, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54, 0x61, 0x62,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x54, 0x61,
	0x62, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22,
	0x91, 0x02, 0x0a, 0x0c, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x70, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x6d, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x64, 0x6f, 0x6d, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x22, 0x1c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x22, 0xea, 0x01,
	0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x6f, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x70, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x70, 0x74, 0x22, 0x63, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x1c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a,
	0x0a, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x9f, 0x02, 0x0a, 0x0f, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0x63, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e,
	0x75, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x22, 0xe5, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x70, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x70, 0x74, 0x22, 0x63,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x1c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x40, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x49, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x5b, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4e, 0x65, 0x77, 0x32, 0x83,
	0x14, 0x0a, 0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x66,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x12, 0x14, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x7d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x62, 0x0e,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15,
	0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x58, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12,
	0x6f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x62, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2f, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x61, 0x6c, 0x6c,
	0x12, 0x64, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x17, 0x2f,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x12, 0x76, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x1d, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x44, 0x65, 0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x6d,
	0x0a, 0x07, 0x41, 0x64, 0x64, 0x44, 0x65, 0x70, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a,
	0x01, 0x2a, 0x22, 0x19, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x64, 0x64, 0x44, 0x65, 0x70, 0x74, 0x12, 0x73, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x74, 0x12, 0x66, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x70, 0x74, 0x12, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x65,
	0x6c, 0x44, 0x65, 0x70, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x12, 0x23, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x6d, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61,
	0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x66, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e,
	0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2f, 0x64, 0x65, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x73,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65,
	0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x26, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1d, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x73, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x66, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x2a, 0x1e, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x64, 0x65, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x62, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x20, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2f, 0x67, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x7a, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f,
	0x73, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x76, 0x0a,
	0x0e, 0x49, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70,
	0x69, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x7d, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a,
	0x01, 0x2a, 0x22, 0x20, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x42, 0x33, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x1e, 0x62, 0x61, 0x73, 0x65, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_base_api_v1_base_proto_rawDescOnce sync.Once
	file_base_api_v1_base_proto_rawDescData = file_base_api_v1_base_proto_rawDesc
)

func file_base_api_v1_base_proto_rawDescGZIP() []byte {
	file_base_api_v1_base_proto_rawDescOnce.Do(func() {
		file_base_api_v1_base_proto_rawDescData = protoimpl.X.CompressGZIP(file_base_api_v1_base_proto_rawDescData)
	})
	return file_base_api_v1_base_proto_rawDescData
}

var file_base_api_v1_base_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_base_api_v1_base_proto_goTypes = []any{
	(*LoginRequest)(nil),           // 0: api.base_api.v1.LoginRequest
	(*LoginReply)(nil),             // 1: api.base_api.v1.LoginReply
	(*GetUserInfoReply)(nil),       // 2: api.base_api.v1.GetUserInfoReply
	(*UserRole)(nil),               // 3: api.base_api.v1.UserRole
	(*UserExtension)(nil),          // 4: api.base_api.v1.UserExtension
	(*GetAccessCodesReply)(nil),    // 5: api.base_api.v1.GetAccessCodesReply
	(*GetMenuListReply)(nil),       // 6: api.base_api.v1.GetMenuListReply
	(*RoleInfo)(nil),               // 7: api.base_api.v1.RoleInfo
	(*RouteItem)(nil),              // 8: api.base_api.v1.RouteItem
	(*RouteMeta)(nil),              // 9: api.base_api.v1.RouteMeta
	(*DeptListItem)(nil),           // 10: api.base_api.v1.DeptListItem
	(*DeleteDept)(nil),             // 11: api.base_api.v1.DeleteDept
	(*GetDeptListReply)(nil),       // 12: api.base_api.v1.GetDeptListReply
	(*RolePageParams)(nil),         // 13: api.base_api.v1.RolePageParams
	(*RoleListItem)(nil),           // 14: api.base_api.v1.RoleListItem
	(*GetRoleListByPageReply)(nil), // 15: api.base_api.v1.GetRoleListByPageReply
	(*DeleteRole)(nil),             // 16: api.base_api.v1.DeleteRole
	(*MenuParams)(nil),             // 17: api.base_api.v1.MenuParams
	(*SysMenuListItem)(nil),        // 18: api.base_api.v1.SysMenuListItem
	(*GetSysMenuListReply)(nil),    // 19: api.base_api.v1.GetSysMenuListReply
	(*AccountParams)(nil),          // 20: api.base_api.v1.AccountParams
	(*AccountListItem)(nil),        // 21: api.base_api.v1.AccountListItem
	(*GetAccountListReply)(nil),    // 22: api.base_api.v1.GetAccountListReply
	(*DeleteUser)(nil),             // 23: api.base_api.v1.DeleteUser
	(*RoleParams)(nil),             // 24: api.base_api.v1.RoleParams
	(*SetRoleStatusRequest)(nil),   // 25: api.base_api.v1.SetRoleStatusRequest
	(*IsAccountRequest)(nil),       // 26: api.base_api.v1.IsAccountRequest
	(*ChangePasswordRequest)(nil),  // 27: api.base_api.v1.ChangePasswordRequest
	(*emptypb.Empty)(nil),          // 28: google.protobuf.Empty
}
var file_base_api_v1_base_proto_depIdxs = []int32{
	7,  // 0: api.base_api.v1.GetUserInfoReply.roles:type_name -> api.base_api.v1.RoleInfo
	3,  // 1: api.base_api.v1.UserExtension.userRole:type_name -> api.base_api.v1.UserRole
	8,  // 2: api.base_api.v1.GetMenuListReply.menuList:type_name -> api.base_api.v1.RouteItem
	9,  // 3: api.base_api.v1.RouteItem.meta:type_name -> api.base_api.v1.RouteMeta
	8,  // 4: api.base_api.v1.RouteItem.children:type_name -> api.base_api.v1.RouteItem
	10, // 5: api.base_api.v1.DeptListItem.children:type_name -> api.base_api.v1.DeptListItem
	10, // 6: api.base_api.v1.GetDeptListReply.items:type_name -> api.base_api.v1.DeptListItem
	14, // 7: api.base_api.v1.GetRoleListByPageReply.items:type_name -> api.base_api.v1.RoleListItem
	18, // 8: api.base_api.v1.SysMenuListItem.children:type_name -> api.base_api.v1.SysMenuListItem
	18, // 9: api.base_api.v1.GetSysMenuListReply.items:type_name -> api.base_api.v1.SysMenuListItem
	21, // 10: api.base_api.v1.GetAccountListReply.items:type_name -> api.base_api.v1.AccountListItem
	0,  // 11: api.base_api.v1.Base.Login:input_type -> api.base_api.v1.LoginRequest
	28, // 12: api.base_api.v1.Base.GetUserInfo:input_type -> google.protobuf.Empty
	28, // 13: api.base_api.v1.Base.GetAccessCodes:input_type -> google.protobuf.Empty
	28, // 14: api.base_api.v1.Base.Logout:input_type -> google.protobuf.Empty
	28, // 15: api.base_api.v1.Base.GetMenuList:input_type -> google.protobuf.Empty
	28, // 16: api.base_api.v1.Base.RefreshToken:input_type -> google.protobuf.Empty
	28, // 17: api.base_api.v1.Base.GetDeptList:input_type -> google.protobuf.Empty
	10, // 18: api.base_api.v1.Base.AddDept:input_type -> api.base_api.v1.DeptListItem
	10, // 19: api.base_api.v1.Base.UpdateDept:input_type -> api.base_api.v1.DeptListItem
	11, // 20: api.base_api.v1.Base.DelDept:input_type -> api.base_api.v1.DeleteDept
	13, // 21: api.base_api.v1.Base.GetRoleListByPage:input_type -> api.base_api.v1.RolePageParams
	14, // 22: api.base_api.v1.Base.AddRole:input_type -> api.base_api.v1.RoleListItem
	16, // 23: api.base_api.v1.Base.DelRole:input_type -> api.base_api.v1.DeleteRole
	14, // 24: api.base_api.v1.Base.UpdateRole:input_type -> api.base_api.v1.RoleListItem
	17, // 25: api.base_api.v1.Base.GetSysMenuList:input_type -> api.base_api.v1.MenuParams
	20, // 26: api.base_api.v1.Base.GetAccountList:input_type -> api.base_api.v1.AccountParams
	21, // 27: api.base_api.v1.Base.AddUser:input_type -> api.base_api.v1.AccountListItem
	23, // 28: api.base_api.v1.Base.DelUser:input_type -> api.base_api.v1.DeleteUser
	24, // 29: api.base_api.v1.Base.GetAllRoleList:input_type -> api.base_api.v1.RoleParams
	25, // 30: api.base_api.v1.Base.SetRoleStatus:input_type -> api.base_api.v1.SetRoleStatusRequest
	26, // 31: api.base_api.v1.Base.IsAccountExist:input_type -> api.base_api.v1.IsAccountRequest
	27, // 32: api.base_api.v1.Base.ChangePassword:input_type -> api.base_api.v1.ChangePasswordRequest
	1,  // 33: api.base_api.v1.Base.Login:output_type -> api.base_api.v1.LoginReply
	2,  // 34: api.base_api.v1.Base.GetUserInfo:output_type -> api.base_api.v1.GetUserInfoReply
	5,  // 35: api.base_api.v1.Base.GetAccessCodes:output_type -> api.base_api.v1.GetAccessCodesReply
	28, // 36: api.base_api.v1.Base.Logout:output_type -> google.protobuf.Empty
	6,  // 37: api.base_api.v1.Base.GetMenuList:output_type -> api.base_api.v1.GetMenuListReply
	1,  // 38: api.base_api.v1.Base.RefreshToken:output_type -> api.base_api.v1.LoginReply
	12, // 39: api.base_api.v1.Base.GetDeptList:output_type -> api.base_api.v1.GetDeptListReply
	10, // 40: api.base_api.v1.Base.AddDept:output_type -> api.base_api.v1.DeptListItem
	10, // 41: api.base_api.v1.Base.UpdateDept:output_type -> api.base_api.v1.DeptListItem
	28, // 42: api.base_api.v1.Base.DelDept:output_type -> google.protobuf.Empty
	15, // 43: api.base_api.v1.Base.GetRoleListByPage:output_type -> api.base_api.v1.GetRoleListByPageReply
	14, // 44: api.base_api.v1.Base.AddRole:output_type -> api.base_api.v1.RoleListItem
	28, // 45: api.base_api.v1.Base.DelRole:output_type -> google.protobuf.Empty
	14, // 46: api.base_api.v1.Base.UpdateRole:output_type -> api.base_api.v1.RoleListItem
	19, // 47: api.base_api.v1.Base.GetSysMenuList:output_type -> api.base_api.v1.GetSysMenuListReply
	22, // 48: api.base_api.v1.Base.GetAccountList:output_type -> api.base_api.v1.GetAccountListReply
	21, // 49: api.base_api.v1.Base.AddUser:output_type -> api.base_api.v1.AccountListItem
	28, // 50: api.base_api.v1.Base.DelUser:output_type -> google.protobuf.Empty
	15, // 51: api.base_api.v1.Base.GetAllRoleList:output_type -> api.base_api.v1.GetRoleListByPageReply
	28, // 52: api.base_api.v1.Base.SetRoleStatus:output_type -> google.protobuf.Empty
	28, // 53: api.base_api.v1.Base.IsAccountExist:output_type -> google.protobuf.Empty
	28, // 54: api.base_api.v1.Base.ChangePassword:output_type -> google.protobuf.Empty
	33, // [33:55] is the sub-list for method output_type
	11, // [11:33] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_base_api_v1_base_proto_init() }
func file_base_api_v1_base_proto_init() {
	if File_base_api_v1_base_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_base_api_v1_base_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_base_api_v1_base_proto_goTypes,
		DependencyIndexes: file_base_api_v1_base_proto_depIdxs,
		MessageInfos:      file_base_api_v1_base_proto_msgTypes,
	}.Build()
	File_base_api_v1_base_proto = out.File
	file_base_api_v1_base_proto_rawDesc = nil
	file_base_api_v1_base_proto_goTypes = nil
	file_base_api_v1_base_proto_depIdxs = nil
}
