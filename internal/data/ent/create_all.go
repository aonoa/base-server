// Code generated by entgo-template. DO NOT EDIT.

package ent

// CreateAll creates a new Dept entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *DeptCreate) CreateAll(Dept *Dept) *DeptCreate {
	builder := c
	builder = builder.SetName(Dept.Name)
	builder = builder.SetSort(Dept.Sort)
	builder = builder.SetStatus(Dept.Status)
	builder = builder.SetDesc(Dept.Desc)
	builder = builder.SetExtension(Dept.Extension)
	builder = builder.SetDom(Dept.Dom)
	builder = builder.SetPid(Dept.Pid)
	return builder
}

// CreateAll creates a new Menu entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *MenuCreate) CreateAll(Menu *Menu) *MenuCreate {
	builder := c
	builder = builder.SetPid(Menu.Pid)
	builder = builder.SetType(Menu.Type)
	builder = builder.SetStatus(Menu.Status)
	builder = builder.SetName(Menu.Name)
	builder = builder.SetTitle(Menu.Title)
	builder = builder.SetIcon(Menu.Icon)
	builder = builder.SetOrder(Menu.Order)
	builder = builder.SetPath(Menu.Path)
	builder = builder.SetComponent(Menu.Component)
	builder = builder.SetRedirect(Menu.Redirect)
	builder = builder.SetLink(Menu.Link)
	builder = builder.SetIframeSrc(Menu.IframeSrc)
	builder = builder.SetActiveIcon(Menu.ActiveIcon)
	builder = builder.SetActivePath(Menu.ActivePath)
	builder = builder.SetMaxNumOfOpenTab(Menu.MaxNumOfOpenTab)
	builder = builder.SetIgnoreAuth(Menu.IgnoreAuth)
	builder = builder.SetKeepalive(Menu.Keepalive)
	builder = builder.SetPermission(Menu.Permission)
	builder = builder.SetAffixTab(Menu.AffixTab)
	builder = builder.SetAffixTabOrder(Menu.AffixTabOrder)
	builder = builder.SetHideInMenu(Menu.HideInMenu)
	builder = builder.SetHideInTab(Menu.HideInTab)
	builder = builder.SetHideInBreadcrumb(Menu.HideInBreadcrumb)
	builder = builder.SetHideChildrenInMenu(Menu.HideChildrenInMenu)
	return builder
}

// CreateAll creates a new Role entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *RoleCreate) CreateAll(Role *Role) *RoleCreate {
	builder := c
	builder = builder.SetName(Role.Name)
	builder = builder.SetValue(Role.Value)
	builder = builder.SetStatus(Role.Status)
	builder = builder.SetDesc(Role.Desc)
	builder = builder.SetMenu(Role.Menu)
	return builder
}

// CreateAll creates a new Rule entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *RuleCreate) CreateAll(Rule *Rule) *RuleCreate {
	builder := c
	builder = builder.SetPtype(Rule.Ptype)
	builder = builder.SetV0(Rule.V0)
	builder = builder.SetV1(Rule.V1)
	builder = builder.SetV2(Rule.V2)
	builder = builder.SetV3(Rule.V3)
	builder = builder.SetV4(Rule.V4)
	builder = builder.SetV5(Rule.V5)
	return builder
}

// CreateAll creates a new User entity with all fields set
// (excluding auto-generated fields like ID, create_time, update_time).
func (c *UserCreate) CreateAll(User *User) *UserCreate {
	builder := c
	builder = builder.SetUsername(User.Username)
	builder = builder.SetPassword(User.Password)
	builder = builder.SetNickname(User.Nickname)
	builder = builder.SetStatus(User.Status)
	builder = builder.SetAvatar(User.Avatar)
	builder = builder.SetDesc(User.Desc)
	builder = builder.SetExtension(User.Extension)
	return builder
}
