// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SysAPIResourcesColumns holds the columns for the "sys_api_resources" table.
	SysAPIResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "数据唯一标识"},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "description", Type: field.TypeString, Comment: "描述"},
		{Name: "path", Type: field.TypeString, Comment: "路径"},
		{Name: "method", Type: field.TypeString, Comment: "方法"},
		{Name: "module", Type: field.TypeString, Comment: "模块"},
		{Name: "module_description", Type: field.TypeString, Comment: "模块描述"},
		{Name: "resources_group", Type: field.TypeString, Comment: "资源组"},
	}
	// SysAPIResourcesTable holds the schema information for the "sys_api_resources" table.
	SysAPIResourcesTable = &schema.Table{
		Name:       "sys_api_resources",
		Comment:    "系统API表",
		Columns:    SysAPIResourcesColumns,
		PrimaryKey: []*schema.Column{SysAPIResourcesColumns[0]},
	}
	// SysDeptColumns holds the columns for the "sys_dept" table.
	SysDeptColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Comment: "部门名称"},
		{Name: "sort", Type: field.TypeInt32, Comment: "排序"},
		{Name: "status", Type: field.TypeBool, Comment: "0-锁定，1-正常"},
		{Name: "desc", Type: field.TypeString, Comment: "备注"},
		{Name: "extension", Type: field.TypeString, Comment: "扩展信息"},
		{Name: "dom", Type: field.TypeInt64, Comment: "域"},
		{Name: "dept_roles", Type: field.TypeInt64, Nullable: true},
		{Name: "pid", Type: field.TypeInt64, Nullable: true, Comment: "父节点id"},
	}
	// SysDeptTable holds the schema information for the "sys_dept" table.
	SysDeptTable = &schema.Table{
		Name:       "sys_dept",
		Comment:    "部门表",
		Columns:    SysDeptColumns,
		PrimaryKey: []*schema.Column{SysDeptColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_dept_sys_role_roles",
				Columns:    []*schema.Column{SysDeptColumns[9]},
				RefColumns: []*schema.Column{SysRoleColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sys_dept_sys_dept_children",
				Columns:    []*schema.Column{SysDeptColumns[10]},
				RefColumns: []*schema.Column{SysDeptColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SysMenuColumns holds the columns for the "sys_menu" table.
	SysMenuColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "pid", Type: field.TypeInt64, Comment: "上一级ID"},
		{Name: "type", Type: field.TypeString, Comment: "菜单类型,catalog-目录，menu-菜单，embedded-内嵌，link-外链，button-按钮"},
		{Name: "status", Type: field.TypeBool, Comment: "状态,0-禁用，1-启用", Default: false},
		{Name: "path", Type: field.TypeString, Comment: "路由path"},
		{Name: "redirect", Type: field.TypeString, Comment: "重定向path", Default: ""},
		{Name: "alias", Type: field.TypeString, Comment: "记录的别名，例如/users/:id和/u/:id。所有alias和path值必须共享相同的参数。", Default: ""},
		{Name: "name", Type: field.TypeString, Comment: "组件名"},
		{Name: "component", Type: field.TypeString, Comment: "组件路径"},
		{Name: "icon", Type: field.TypeString, Comment: "图标", Default: ""},
		{Name: "title", Type: field.TypeString, Comment: "显示名称"},
		{Name: "order", Type: field.TypeInt32, Comment: "排序(越小越前)", Default: 0},
		{Name: "open_in_new_window", Type: field.TypeBool, Comment: "在新窗口打开", Default: false},
		{Name: "no_basic_layout", Type: field.TypeBool, Comment: "不使用基础布局（仅在顶级生效）", Default: false},
		{Name: "menu_visible_with_forbidden", Type: field.TypeBool, Comment: "菜单可以看到，但是访问会被重定向到403", Default: false},
		{Name: "link", Type: field.TypeString, Comment: "外链-跳转路径", Default: ""},
		{Name: "iframe_src", Type: field.TypeString, Comment: "iframe地址", Default: ""},
		{Name: "active_icon", Type: field.TypeString, Comment: "激活图标（菜单）", Default: ""},
		{Name: "active_path", Type: field.TypeString, Comment: "当前激活的菜单，有时候不想激活现有菜单，需要激活父级菜单时使用", Default: ""},
		{Name: "max_num_of_open_tab", Type: field.TypeInt16, Comment: "标签页最大打开数量", Default: -1},
		{Name: "keepalive", Type: field.TypeBool, Comment: "缓存,0-否，1-是", Default: false},
		{Name: "ignore_access", Type: field.TypeBool, Comment: "忽略权限，直接可以访问", Default: false},
		{Name: "authority", Type: field.TypeString, Comment: "需要特定的角色标识才可以访问(数组，','分割)", Default: ""},
		{Name: "affix_tab", Type: field.TypeBool, Comment: "是否固定标签页,0-否，1-是", Default: false},
		{Name: "affix_tab_order", Type: field.TypeInt16, Comment: "固定标签页的顺序", Default: 0},
		{Name: "hide_in_menu", Type: field.TypeBool, Comment: "当前路由在菜单中不展现,0-否，1-是", Default: false},
		{Name: "hide_in_tab", Type: field.TypeBool, Comment: "当前路由在标签页不展现,0-否，1-是", Default: false},
		{Name: "hide_in_breadcrumb", Type: field.TypeBool, Comment: "当前路由在面包屑中不展现,0-否，1-是", Default: false},
		{Name: "hide_children_in_menu", Type: field.TypeBool, Comment: "当前路由的子级在菜单中不展现,0-否，1-是", Default: false},
		{Name: "full_path_key", Type: field.TypeBool, Comment: "路由的完整路径作为key（默认true）", Default: true},
		{Name: "badge", Type: field.TypeString, Comment: "用于配置页面的徽标，会在菜单显示", Default: ""},
		{Name: "badge_type", Type: field.TypeString, Comment: "用于配置页面的徽标类型，dot 为小红点，normal 为文本", Default: "normal"},
		{Name: "badge_variants", Type: field.TypeString, Comment: "用于配置页面的徽标颜色。类型：'default' | 'destructive' | 'primary' | 'success' | 'warning' | string", Default: "success"},
	}
	// SysMenuTable holds the schema information for the "sys_menu" table.
	SysMenuTable = &schema.Table{
		Name:       "sys_menu",
		Comment:    "菜单表",
		Columns:    SysMenuColumns,
		PrimaryKey: []*schema.Column{SysMenuColumns[0]},
	}
	// SysResourcesColumns holds the columns for the "sys_resources" table.
	SysResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true, Comment: "数据唯一标识"},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Comment: "资源名称"},
		{Name: "type", Type: field.TypeString, Comment: "资源类型"},
		{Name: "value", Type: field.TypeString, Comment: "资源值"},
		{Name: "method", Type: field.TypeString, Comment: "对资源的操作"},
		{Name: "description", Type: field.TypeString, Comment: "资源的描述"},
	}
	// SysResourcesTable holds the schema information for the "sys_resources" table.
	SysResourcesTable = &schema.Table{
		Name:       "sys_resources",
		Comment:    "系统资源表",
		Columns:    SysResourcesColumns,
		PrimaryKey: []*schema.Column{SysResourcesColumns[0]},
	}
	// SysRoleColumns holds the columns for the "sys_role" table.
	SysRoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Comment: "角色名称"},
		{Name: "value", Type: field.TypeString, Comment: "角色值"},
		{Name: "status", Type: field.TypeBool, Comment: "0-禁用，1-启用"},
		{Name: "desc", Type: field.TypeString, Comment: "简介"},
		{Name: "menus", Type: field.TypeJSON, Comment: "权限菜单ID列表"},
	}
	// SysRoleTable holds the schema information for the "sys_role" table.
	SysRoleTable = &schema.Table{
		Name:       "sys_role",
		Comment:    "角色表",
		Columns:    SysRoleColumns,
		PrimaryKey: []*schema.Column{SysRoleColumns[0]},
	}
	// SysUserColumns holds the columns for the "sys_user" table.
	SysUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Comment: "用户名"},
		{Name: "password", Type: field.TypeString, Comment: "密码"},
		{Name: "nickname", Type: field.TypeString, Comment: "昵称"},
		{Name: "status", Type: field.TypeInt8, Comment: "0-锁定，1-正常"},
		{Name: "avatar", Type: field.TypeString, Comment: "头像"},
		{Name: "desc", Type: field.TypeString, Comment: "备注"},
		{Name: "extension", Type: field.TypeString, Comment: "扩展信息"},
	}
	// SysUserTable holds the schema information for the "sys_user" table.
	SysUserTable = &schema.Table{
		Name:       "sys_user",
		Comment:    "用户信息表",
		Columns:    SysUserColumns,
		PrimaryKey: []*schema.Column{SysUserColumns[0]},
	}
	// APIResourcesRolesColumns holds the columns for the "api_resources_roles" table.
	APIResourcesRolesColumns = []*schema.Column{
		{Name: "api_resources_id", Type: field.TypeString},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// APIResourcesRolesTable holds the schema information for the "api_resources_roles" table.
	APIResourcesRolesTable = &schema.Table{
		Name:       "api_resources_roles",
		Columns:    APIResourcesRolesColumns,
		PrimaryKey: []*schema.Column{APIResourcesRolesColumns[0], APIResourcesRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "api_resources_roles_api_resources_id",
				Columns:    []*schema.Column{APIResourcesRolesColumns[0]},
				RefColumns: []*schema.Column{SysAPIResourcesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "api_resources_roles_role_id",
				Columns:    []*schema.Column{APIResourcesRolesColumns[1]},
				RefColumns: []*schema.Column{SysRoleColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeptUsersColumns holds the columns for the "dept_users" table.
	DeptUsersColumns = []*schema.Column{
		{Name: "dept_id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// DeptUsersTable holds the schema information for the "dept_users" table.
	DeptUsersTable = &schema.Table{
		Name:       "dept_users",
		Columns:    DeptUsersColumns,
		PrimaryKey: []*schema.Column{DeptUsersColumns[0], DeptUsersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "dept_users_dept_id",
				Columns:    []*schema.Column{DeptUsersColumns[0]},
				RefColumns: []*schema.Column{SysDeptColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "dept_users_user_id",
				Columns:    []*schema.Column{DeptUsersColumns[1]},
				RefColumns: []*schema.Column{SysUserColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ResourceRolesColumns holds the columns for the "resource_roles" table.
	ResourceRolesColumns = []*schema.Column{
		{Name: "resource_id", Type: field.TypeString},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// ResourceRolesTable holds the schema information for the "resource_roles" table.
	ResourceRolesTable = &schema.Table{
		Name:       "resource_roles",
		Columns:    ResourceRolesColumns,
		PrimaryKey: []*schema.Column{ResourceRolesColumns[0], ResourceRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resource_roles_resource_id",
				Columns:    []*schema.Column{ResourceRolesColumns[0]},
				RefColumns: []*schema.Column{SysResourcesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "resource_roles_role_id",
				Columns:    []*schema.Column{ResourceRolesColumns[1]},
				RefColumns: []*schema.Column{SysRoleColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0], UserRolesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_user_id",
				Columns:    []*schema.Column{UserRolesColumns[0]},
				RefColumns: []*schema.Column{SysUserColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_roles_role_id",
				Columns:    []*schema.Column{UserRolesColumns[1]},
				RefColumns: []*schema.Column{SysRoleColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SysAPIResourcesTable,
		SysDeptTable,
		SysMenuTable,
		SysResourcesTable,
		SysRoleTable,
		SysUserTable,
		APIResourcesRolesTable,
		DeptUsersTable,
		ResourceRolesTable,
		UserRolesTable,
	}
)

func init() {
	SysAPIResourcesTable.Annotation = &entsql.Annotation{
		Table: "sys_api_resources",
	}
	SysDeptTable.ForeignKeys[0].RefTable = SysRoleTable
	SysDeptTable.ForeignKeys[1].RefTable = SysDeptTable
	SysDeptTable.Annotation = &entsql.Annotation{
		Table: "sys_dept",
	}
	SysMenuTable.Annotation = &entsql.Annotation{
		Table: "sys_menu",
	}
	SysResourcesTable.Annotation = &entsql.Annotation{
		Table: "sys_resources",
	}
	SysRoleTable.Annotation = &entsql.Annotation{
		Table: "sys_role",
	}
	SysUserTable.Annotation = &entsql.Annotation{
		Table: "sys_user",
	}
	APIResourcesRolesTable.ForeignKeys[0].RefTable = SysAPIResourcesTable
	APIResourcesRolesTable.ForeignKeys[1].RefTable = SysRoleTable
	DeptUsersTable.ForeignKeys[0].RefTable = SysDeptTable
	DeptUsersTable.ForeignKeys[1].RefTable = SysUserTable
	ResourceRolesTable.ForeignKeys[0].RefTable = SysResourcesTable
	ResourceRolesTable.ForeignKeys[1].RefTable = SysRoleTable
	UserRolesTable.ForeignKeys[0].RefTable = SysUserTable
	UserRolesTable.ForeignKeys[1].RefTable = SysRoleTable
}
